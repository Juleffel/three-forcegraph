// Version 1.4.1 three-forcegraph - https://github.com/vasturiano/three-forcegraph
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("three")):"function"==typeof define&&define.amd?define(["three"],t):e.ThreeForceGraph=t(e.THREE)}(this,function(e){"use strict";function t(e){return function(){return e}}function n(){return 1e-6*(Math.random()-.5)}function r(e,t,n){if(isNaN(t))return e;// ignore invalid points
var r,a,o,i,f,s,c=e._root,u={data:n},d=e._x0,h=e._x1;
// If the tree is empty, initialize the root as a leaf.
if(!c)return e._root=u,e;
// Find the existing leaf for the new point, or add it.
for(;c.length;)if((i=t>=(a=(d+h)/2))?d=a:h=a,r=c,!(c=c[f=+i]))return r[f]=u,e
// Is the new point is exactly coincident with the existing point?;
if(t===(o=+e._x.call(null,c.data)))return u.next=c,r?r[f]=u:e._root=u,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{r=r?r[f]=new Array(2):e._root=new Array(2),(i=t>=(a=(d+h)/2))?d=a:h=a}while((f=+i)==(s=+(o>=a)));return r[s]=c,r[f]=u,e}function a(e,t,n){this.node=e,this.x0=t,this.x1=n}function o(e){return e[0]}function i(e,t){var n=new f(null==t?o:t,NaN,NaN);return null==e?n:n.addAll(e)}function f(e,t,n){this._x=e,this._x0=t,this._x1=n,this._root=void 0}function s(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var c=i.prototype=f.prototype;c.copy=function(){var e,t,n=new f(this._x,this._x0,this._x1),r=this._root;if(!r)return n;if(!r.length)return n._root=s(r),n;for(e=[{source:r,target:n._root=new Array(2)}];r=e.pop();)for(var a=0;a<2;++a)(t=r.source[a])&&(t.length?e.push({source:t,target:r.target[a]=new Array(2)}):r.target[a]=s(t));return n},c.add=function(e){var t=+this._x.call(null,e);return r(this.cover(t),t,e)},c.addAll=function(e){var t,n,a=e.length,o=new Array(a),i=1/0,f=-1/0;
// Compute the points and their extent.
for(t=0;t<a;++t)isNaN(n=+this._x.call(null,e[t]))||(o[t]=n,n<i&&(i=n),n>f&&(f=n));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(f<i&&(i=this._x0,f=this._x1)
// Expand the tree to cover the new points.
,this.cover(i).cover(f),t=0;t<a;++t)r(this,o[t],e[t]);return this},c.cover=function(e){if(isNaN(e=+e))return this;// ignore invalid points
var t=this._x0,n=this._x1;
// If the binarytree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing half boundaries don’t change due to floating point error!
if(isNaN(t))n=(t=Math.floor(e))+1;else{if(!(t>e||e>n))return this;var r,a,o=n-t,i=this._root;switch(a=+(e<(t+n)/2)){case 0:do{r=new Array(2),r[a]=i,i=r}while(o*=2,n=t+o,e>n);break;case 1:do{r=new Array(2),r[a]=i,i=r}while(o*=2,t=n-o,t>e)}this._root&&this._root.length&&(this._root=i)}return this._x0=t,this._x1=n,this},c.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},c.extent=function(e){return arguments.length?this.cover(+e[0][0]).cover(+e[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]},c.find=function(e,t){var n,r,o,i,f,s=this._x0,c=this._x1,u=[],d=this._root;for(d&&u.push(new a(d,s,c)),null==t?t=1/0:(s=e-t,c=e+t);i=u.pop();)
// Stop searching if this half can’t contain a closer node.
if(!(!(d=i.node)||(r=i.x0)>c||(o=i.x1)<s))
// Bisect the current half.
if(d.length){var h=(r+o)/2;u.push(new a(d[1],h,o),new a(d[0],r,h)),
// Visit the closest half first.
(f=+(e>=h))&&(i=u[u.length-1],u[u.length-1]=u[u.length-1-f],u[u.length-1-f]=i)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var l=Math.abs(e-+this._x.call(null,d.data));l<t&&(t=l,s=e-l,c=e+l,n=d.data)}return n},c.remove=function(e){if(isNaN(o=+this._x.call(null,e)))return this;// ignore invalid points
var t,n,r,a,o,i,f,s,c,u=this._root,d=this._x0,h=this._x1;
// If the tree is empty, initialize the root as a leaf.
if(!u)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(u.length)for(;;){if((f=o>=(i=(d+h)/2))?d=i:h=i,t=u,!(u=u[s=+f]))return this;if(!u.length)break;t[s+1&1]&&(n=t,c=s
// Find the point to remove.
)}for(;u.data!==e;)if(r=u,!(u=u.next))return this;
// If there are multiple coincident points, remove just the point.
return(a=u.next)&&delete u.next,r?(a?r.next=a:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
a?t[s]=a:delete t[s],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(u=t[0]||t[1])&&u===(t[1]||t[0])&&!u.length&&(n?n[c]=u:this._root=u),this):(this._root=a,this)},c.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},c.root=function(){return this._root},c.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},c.visit=function(e){var t,n,r,o,i=[],f=this._root;for(f&&i.push(new a(f,this._x0,this._x1));t=i.pop();)if(!e(f=t.node,r=t.x0,o=t.x1)&&f.length){var s=(r+o)/2;(n=f[1])&&i.push(new a(n,s,o)),(n=f[0])&&i.push(new a(n,r,s))}return this},c.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new a(this._root,this._x0,this._x1));t=n.pop();){var o=t.node;if(o.length){var i,f=t.x0,s=t.x1,c=(f+s)/2;(i=o[0])&&n.push(new a(i,f,c)),(i=o[1])&&n.push(new a(i,c,s))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.x1);return this},c.x=function(e){return arguments.length?(this._x=e,this):this._x};function u(e,t,n,r){if(isNaN(t)||isNaN(n))return e;// ignore invalid points
var a,o,i,f,s,c,u,d,h,l=e._root,p={data:r},b=e._x0,y=e._y0,g=e._x1,v=e._y1;
// If the tree is empty, initialize the root as a leaf.
if(!l)return e._root=p,e;
// Find the existing leaf for the new point, or add it.
for(;l.length;)if((c=t>=(o=(b+g)/2))?b=o:g=o,(u=n>=(i=(y+v)/2))?y=i:v=i,a=l,!(l=l[d=u<<1|c]))return a[d]=p,e
// Is the new point is exactly coincident with the existing point?;
if(f=+e._x.call(null,l.data),s=+e._y.call(null,l.data),t===f&&n===s)return p.next=l,a?a[d]=p:e._root=p,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{a=a?a[d]=new Array(4):e._root=new Array(4),(c=t>=(o=(b+g)/2))?b=o:g=o,(u=n>=(i=(y+v)/2))?y=i:v=i}while((d=u<<1|c)==(h=(s>=i)<<1|f>=o));return a[h]=l,a[d]=p,e}function d(e,t,n,r,a){this.node=e,this.x0=t,this.y0=n,this.x1=r,this.y1=a}function h(e){return e[0]}function l(e){return e[1]}function p(e,t,n){var r=new b(null==t?h:t,null==n?l:n,NaN,NaN,NaN,NaN);return null==e?r:r.addAll(e)}function b(e,t,n,r,a,o){this._x=e,this._y=t,this._x0=n,this._y0=r,this._x1=a,this._y1=o,this._root=void 0}function y(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var g=p.prototype=b.prototype;g.copy=function(){var e,t,n=new b(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return n;if(!r.length)return n._root=y(r),n;for(e=[{source:r,target:n._root=new Array(4)}];r=e.pop();)for(var a=0;a<4;++a)(t=r.source[a])&&(t.length?e.push({source:t,target:r.target[a]=new Array(4)}):r.target[a]=y(t));return n},g.add=function(e){var t=+this._x.call(null,e),n=+this._y.call(null,e);return u(this.cover(t,n),t,n,e)},g.addAll=function(e){var t,n,r,a,o=e.length,i=new Array(o),f=new Array(o),s=1/0,c=1/0,d=-1/0,h=-1/0;
// Compute the points and their extent.
for(n=0;n<o;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(a=+this._y.call(null,t))||(i[n]=r,f[n]=a,r<s&&(s=r),r>d&&(d=r),a<c&&(c=a),a>h&&(h=a));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(d<s&&(s=this._x0,d=this._x1),h<c&&(c=this._y0,h=this._y1)
// Expand the tree to cover the new points.
,this.cover(s,c).cover(d,h),n=0;n<o;++n)u(this,i[n],f[n],e[n]);return this},g.cover=function(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;// ignore invalid points
var n=this._x0,r=this._y0,a=this._x1,o=this._y1;
// If the quadtree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing quadrant boundaries don’t change due to floating point error!
if(isNaN(n))a=(n=Math.floor(e))+1,o=(r=Math.floor(t))+1;else{if(!(n>e||e>a||r>t||t>o))return this;var i,f,s=a-n,c=this._root;switch(f=(t<(r+o)/2)<<1|e<(n+a)/2){case 0:do{i=new Array(4),i[f]=c,c=i}while(s*=2,a=n+s,o=r+s,e>a||t>o);break;case 1:do{i=new Array(4),i[f]=c,c=i}while(s*=2,n=a-s,o=r+s,n>e||t>o);break;case 2:do{i=new Array(4),i[f]=c,c=i}while(s*=2,a=n+s,r=o-s,e>a||r>t);break;case 3:do{i=new Array(4),i[f]=c,c=i}while(s*=2,n=a-s,r=o-s,n>e||r>t)}this._root&&this._root.length&&(this._root=c)}return this._x0=n,this._y0=r,this._x1=a,this._y1=o,this},g.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},g.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},g.find=function(e,t,n){var r,a,o,i,f,s,c,u=this._x0,h=this._y0,l=this._x1,p=this._y1,b=[],y=this._root;for(y&&b.push(new d(y,u,h,l,p)),null==n?n=1/0:(u=e-n,h=t-n,l=e+n,p=t+n,n*=n);s=b.pop();)
// Stop searching if this quadrant can’t contain a closer node.
if(!(!(y=s.node)||(a=s.x0)>l||(o=s.y0)>p||(i=s.x1)<u||(f=s.y1)<h))
// Bisect the current quadrant.
if(y.length){var g=(a+i)/2,v=(o+f)/2;b.push(new d(y[3],g,v,i,f),new d(y[2],a,v,g,f),new d(y[1],g,o,i,v),new d(y[0],a,o,g,v)),
// Visit the closest quadrant first.
(c=(t>=v)<<1|e>=g)&&(s=b[b.length-1],b[b.length-1]=b[b.length-1-c],b[b.length-1-c]=s)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var m=e-+this._x.call(null,y.data),x=t-+this._y.call(null,y.data),w=m*m+x*x;if(w<n){var _=Math.sqrt(n=w);u=e-_,h=t-_,l=e+_,p=t+_,r=y.data}}return r},g.remove=function(e){if(isNaN(o=+this._x.call(null,e))||isNaN(i=+this._y.call(null,e)))return this;// ignore invalid points
var t,n,r,a,o,i,f,s,c,u,d,h,l=this._root,p=this._x0,b=this._y0,y=this._x1,g=this._y1;
// If the tree is empty, initialize the root as a leaf.
if(!l)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(l.length)for(;;){if((c=o>=(f=(p+y)/2))?p=f:y=f,(u=i>=(s=(b+g)/2))?b=s:g=s,t=l,!(l=l[d=u<<1|c]))return this;if(!l.length)break;(t[d+1&3]||t[d+2&3]||t[d+3&3])&&(n=t,h=d
// Find the point to remove.
)}for(;l.data!==e;)if(r=l,!(l=l.next))return this;
// If there are multiple coincident points, remove just the point.
return(a=l.next)&&delete l.next,r?(a?r.next=a:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
a?t[d]=a:delete t[d],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(l=t[0]||t[1]||t[2]||t[3])&&l===(t[3]||t[2]||t[1]||t[0])&&!l.length&&(n?n[h]=l:this._root=l),this):(this._root=a,this)},g.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},g.root=function(){return this._root},g.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},g.visit=function(e){var t,n,r,a,o,i,f=[],s=this._root;for(s&&f.push(new d(s,this._x0,this._y0,this._x1,this._y1));t=f.pop();)if(!e(s=t.node,r=t.x0,a=t.y0,o=t.x1,i=t.y1)&&s.length){var c=(r+o)/2,u=(a+i)/2;(n=s[3])&&f.push(new d(n,c,u,o,i)),(n=s[2])&&f.push(new d(n,r,u,c,i)),(n=s[1])&&f.push(new d(n,c,a,o,u)),(n=s[0])&&f.push(new d(n,r,a,c,u))}return this},g.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new d(this._root,this._x0,this._y0,this._x1,this._y1));t=n.pop();){var a=t.node;if(a.length){var o,i=t.x0,f=t.y0,s=t.x1,c=t.y1,u=(i+s)/2,h=(f+c)/2;(o=a[0])&&n.push(new d(o,i,f,u,h)),(o=a[1])&&n.push(new d(o,u,f,s,h)),(o=a[2])&&n.push(new d(o,i,h,u,c)),(o=a[3])&&n.push(new d(o,u,h,s,c))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.y0,t.x1,t.y1);return this},g.x=function(e){return arguments.length?(this._x=e,this):this._x},g.y=function(e){return arguments.length?(this._y=e,this):this._y};function v(e,t,n,r,a){if(isNaN(t)||isNaN(n)||isNaN(r))return e;// ignore invalid points
var o,i,f,s,c,u,d,h,l,p,b,y,g=e._root,v={data:a},m=e._x0,x=e._y0,w=e._z0,_=e._x1,k=e._y1,A=e._z1;
// If the tree is empty, initialize the root as a leaf.
if(!g)return e._root=v,e;
// Find the existing leaf for the new point, or add it.
for(;g.length;)if((h=t>=(i=(m+_)/2))?m=i:_=i,(l=n>=(f=(x+k)/2))?x=f:k=f,(p=r>=(s=(w+A)/2))?w=s:A=s,o=g,!(g=g[b=p<<2|l<<1|h]))return o[b]=v,e
// Is the new point is exactly coincident with the existing point?;
if(c=+e._x.call(null,g.data),u=+e._y.call(null,g.data),d=+e._z.call(null,g.data),t===c&&n===u&&r===d)return v.next=g,o?o[b]=v:e._root=v,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{o=o?o[b]=new Array(8):e._root=new Array(8),(h=t>=(i=(m+_)/2))?m=i:_=i,(l=n>=(f=(x+k)/2))?x=f:k=f,(p=r>=(s=(w+A)/2))?w=s:A=s}while((b=p<<2|l<<1|h)==(y=(d>=s)<<2|(u>=f)<<1|c>=i));return o[y]=g,o[b]=v,e}function m(e,t,n,r,a,o,i){this.node=e,this.x0=t,this.y0=n,this.z0=r,this.x1=a,this.y1=o,this.z1=i}function x(e){return e[0]}function w(e){return e[1]}function _(e){return e[2]}function k(e,t,n,r){var a=new A(null==t?x:t,null==n?w:n,null==r?_:r,NaN,NaN,NaN,NaN,NaN,NaN);return null==e?a:a.addAll(e)}function A(e,t,n,r,a,o,i,f,s){this._x=e,this._y=t,this._z=n,this._x0=r,this._y0=a,this._z0=o,this._x1=i,this._y1=f,this._z1=s,this._root=void 0}function N(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var M=k.prototype=A.prototype;M.copy=function(){var e,t,n=new A(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),r=this._root;if(!r)return n;if(!r.length)return n._root=N(r),n;for(e=[{source:r,target:n._root=new Array(8)}];r=e.pop();)for(var a=0;a<8;++a)(t=r.source[a])&&(t.length?e.push({source:t,target:r.target[a]=new Array(8)}):r.target[a]=N(t));return n},M.add=function(e){var t=+this._x.call(null,e),n=+this._y.call(null,e),r=+this._z.call(null,e);return v(this.cover(t,n,r),t,n,r,e)},M.addAll=function(e){var t,n,r,a,o,i=e.length,f=new Array(i),s=new Array(i),c=new Array(i),u=1/0,d=1/0,h=1/0,l=-1/0,p=-1/0,b=-1/0;
// Compute the points and their extent.
for(n=0;n<i;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(a=+this._y.call(null,t))||isNaN(o=+this._z.call(null,t))||(f[n]=r,s[n]=a,c[n]=o,r<u&&(u=r),r>l&&(l=r),a<d&&(d=a),a>p&&(p=a),o<h&&(h=o),o>b&&(b=o));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(l<u&&(u=this._x0,l=this._x1),p<d&&(d=this._y0,p=this._y1),b<h&&(h=this._z0,b=this._z1)
// Expand the tree to cover the new points.
,this.cover(u,d,h).cover(l,p,b),n=0;n<i;++n)v(this,f[n],s[n],c[n],e[n]);return this},M.cover=function(e,t,n){if(isNaN(e=+e)||isNaN(t=+t)||isNaN(n=+n))return this;// ignore invalid points
var r=this._x0,a=this._y0,o=this._z0,i=this._x1,f=this._y1,s=this._z1;
// If the octree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing octant boundaries don’t change due to floating point error!
if(isNaN(r))i=(r=Math.floor(e))+1,f=(a=Math.floor(t))+1,s=(o=Math.floor(n))+1;else{if(!(r>e||e>i||a>t||t>f||o>n||n>s))return this;var c,u,d=i-r,h=this._root;switch(u=(n<(o+s)/2)<<2|(t<(a+f)/2)<<1|e<(r+i)/2){case 0:do{c=new Array(8),c[u]=h,h=c}while(d*=2,i=r+d,f=a+d,s=o+d,e>i||t>f||n>s);break;case 1:do{c=new Array(8),c[u]=h,h=c}while(d*=2,r=i-d,f=a+d,s=o+d,r>e||t>f||n>s);break;case 2:do{c=new Array(8),c[u]=h,h=c}while(d*=2,i=r+d,a=f-d,s=o+d,e>i||a>t||n>s);break;case 3:do{c=new Array(8),c[u]=h,h=c}while(d*=2,r=i-d,a=f-d,s=o+d,r>e||a>t||n>s);break;case 4:do{c=new Array(8),c[u]=h,h=c}while(d*=2,i=r+d,f=a+d,o=s-d,e>i||t>f||o>n);break;case 5:do{c=new Array(8),c[u]=h,h=c}while(d*=2,r=i-d,f=a+d,o=s-d,r>e||t>f||o>n);break;case 6:do{c=new Array(8),c[u]=h,h=c}while(d*=2,i=r+d,a=f-d,o=s-d,e>i||a>t||o>n);break;case 7:do{c=new Array(8),c[u]=h,h=c}while(d*=2,r=i-d,a=f-d,o=s-d,r>e||a>t||o>n)}this._root&&this._root.length&&(this._root=h)}return this._x0=r,this._y0=a,this._z0=o,this._x1=i,this._y1=f,this._z1=s,this},M.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},M.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1],+e[0][2]).cover(+e[1][0],+e[1][1],+e[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]},M.find=function(e,t,n,r){var a,o,i,f,s,c,u,d,h,l=this._x0,p=this._y0,b=this._z0,y=this._x1,g=this._y1,v=this._z1,x=[],w=this._root;for(w&&x.push(new m(w,l,p,b,y,g,v)),null==r?r=1/0:(l=e-r,p=t-r,b=n-r,y=e+r,g=t+r,v=n+r,r*=r);d=x.pop();)
// Stop searching if this octant can’t contain a closer node.
if(!(!(w=d.node)||(o=d.x0)>y||(i=d.y0)>g||(f=d.z0)>v||(s=d.x1)<l||(c=d.y1)<p||(u=d.z1)<b))
// Bisect the current octant.
if(w.length){var _=(o+s)/2,k=(i+c)/2,A=(f+u)/2;x.push(new m(w[7],_,k,A,s,c,u),new m(w[6],o,k,A,_,c,u),new m(w[5],_,i,A,s,k,u),new m(w[4],o,i,A,_,k,u),new m(w[3],_,k,f,s,c,A),new m(w[2],o,k,f,_,c,A),new m(w[1],_,i,f,s,k,A),new m(w[0],o,i,f,_,k,A)),
// Visit the closest octant first.
(h=(n>=A)<<2|(t>=k)<<1|e>=_)&&(d=x[x.length-1],x[x.length-1]=x[x.length-1-h],x[x.length-1-h]=d)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var N=e-+this._x.call(null,w.data),M=t-+this._y.call(null,w.data),q=n-+this._z.call(null,w.data),z=N*N+M*M+q*q;if(z<r){var E=Math.sqrt(r=z);l=e-E,p=t-E,b=n-E,y=e+E,g=t+E,v=n+E,a=w.data}}return a},M.remove=function(e){if(isNaN(o=+this._x.call(null,e))||isNaN(i=+this._y.call(null,e))||isNaN(f=+this._z.call(null,e)))return this;// ignore invalid points
var t,n,r,a,o,i,f,s,c,u,d,h,l,p,b,y=this._root,g=this._x0,v=this._y0,m=this._z0,x=this._x1,w=this._y1,_=this._z1;
// If the tree is empty, initialize the root as a leaf.
if(!y)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(y.length)for(;;){if((d=o>=(s=(g+x)/2))?g=s:x=s,(h=i>=(c=(v+w)/2))?v=c:w=c,(l=f>=(u=(m+_)/2))?m=u:_=u,t=y,!(y=y[p=l<<2|h<<1|d]))return this;if(!y.length)break;(t[p+1&7]||t[p+2&7]||t[p+3&7]||t[p+4&7]||t[p+5&7]||t[p+6&7]||t[p+7&7])&&(n=t,b=p
// Find the point to remove.
)}for(;y.data!==e;)if(r=y,!(y=y.next))return this;
// If there are multiple coincident points, remove just the point.
return(a=y.next)&&delete y.next,r?(a?r.next=a:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
a?t[p]=a:delete t[p],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(y=t[0]||t[1]||t[2]||t[3]||t[4]||t[5]||t[6]||t[7])&&y===(t[7]||t[6]||t[5]||t[4]||t[3]||t[2]||t[1]||t[0])&&!y.length&&(n?n[b]=y:this._root=y),this):(this._root=a,this)},M.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},M.root=function(){return this._root},M.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},M.visit=function(e){var t,n,r,a,o,i,f,s,c=[],u=this._root;for(u&&c.push(new m(u,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=c.pop();)if(!e(u=t.node,r=t.x0,a=t.y0,o=t.z0,i=t.x1,f=t.y1,s=t.z1)&&u.length){var d=(r+i)/2,h=(a+f)/2,l=(o+s)/2;(n=u[7])&&c.push(new m(n,d,h,l,i,f,s)),(n=u[6])&&c.push(new m(n,r,h,l,d,f,s)),(n=u[5])&&c.push(new m(n,d,a,l,i,h,s)),(n=u[4])&&c.push(new m(n,r,a,l,d,h,s)),(n=u[3])&&c.push(new m(n,d,h,o,i,f,l)),(n=u[2])&&c.push(new m(n,r,h,o,d,f,l)),(n=u[1])&&c.push(new m(n,d,a,o,i,h,l)),(n=u[0])&&c.push(new m(n,r,a,o,d,h,l))}return this},M.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new m(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=n.pop();){var a=t.node;if(a.length){var o,i=t.x0,f=t.y0,s=t.z0,c=t.x1,u=t.y1,d=t.z1,h=(i+c)/2,l=(f+u)/2,p=(s+d)/2;(o=a[0])&&n.push(new m(o,i,f,s,h,l,p)),(o=a[1])&&n.push(new m(o,h,f,s,c,l,p)),(o=a[2])&&n.push(new m(o,i,l,s,h,u,p)),(o=a[3])&&n.push(new m(o,h,l,s,c,u,p)),(o=a[4])&&n.push(new m(o,i,f,p,h,l,d)),(o=a[5])&&n.push(new m(o,h,f,p,c,l,d)),(o=a[6])&&n.push(new m(o,i,l,p,h,u,d)),(o=a[7])&&n.push(new m(o,h,l,p,c,u,d))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.y0,t.z0,t.x1,t.y1,t.z1);return this},M.x=function(e){return arguments.length?(this._x=e,this):this._x},M.y=function(e){return arguments.length?(this._y=e,this):this._y},M.z=function(e){return arguments.length?(this._z=e,this):this._z};function q(){}q.prototype=z.prototype={constructor:q,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};function z(e,t){var n=new q;
// Copy constructor.
if(e instanceof q)e.each(function(e,t){n.set(t,e)});
// Index array by numeric index or specified key function.
else if(Array.isArray(e)){var r,a=-1,o=e.length;if(null==t)for(;++a<o;)n.set(a,e[a]);else for(;++a<o;)n.set(t(r=e[a],a,e),r)}
// Convert object to map.
else if(e)for(var i in e)n.set(i,e[i]);return n}function E(){}var T=z.prototype;E.prototype=function(e,t){var n=new E;
// Copy constructor.
if(e instanceof E)e.each(function(e){n.add(e)});
// Otherwise, assume it’s an array.
else if(e){var r=-1,a=e.length;if(null==t)for(;++r<a;)n.add(e[r]);else for(;++r<a;)n.add(t(e[r],r,e))}return n}.prototype={constructor:E,has:T.has,add:function(e){return this["$"+(e+="")]=e,this},remove:T.remove,clear:T.clear,values:T.keys,size:T.size,empty:T.empty,each:T.each};function P(e){return e.index}function I(e,t){var n=e.get(t);if(!n)throw new Error("missing: "+t);return n}var L={value:function(){}};function O(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r)throw new Error("illegal type: "+e);r[e]=[]}return new C(r)}function C(e){this._=e}C.prototype=O.prototype={constructor:C,on:function(e,t){var n,r,a,o=this._,i=(r=e+"",a=o,r.trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!a.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}})),f=-1,s=i.length;
// If no callback was specified, return the callback of the given type and name.
if(!(arguments.length<2)){
// If a type was specified, set the callback for the given type and name.
// Otherwise, if a null callback was specified, remove callbacks of the given name.
if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++f<s;)if(n=(e=i[f]).type)o[n]=D(o[n],e.name,t);else if(null==t)for(n in o)o[n]=D(o[n],e.name,null);return this}for(;++f<s;)if((n=(e=i[f]).type)&&(n=S(o[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new C(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,a=new Array(n),o=0;o<n;++o)a[o]=arguments[o+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(o=0,n=(r=this._[e]).length;o<n;++o)r[o].value.apply(t,a)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],a=0,o=r.length;a<o;++a)r[a].value.apply(t,n)}};function S(e,t){for(var n,r=0,a=e.length;r<a;++r)if((n=e[r]).name===t)return n.value}function D(e,t,n){for(var r=0,a=e.length;r<a;++r)if(e[r].name===t){e[r]=L,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}var j,B,R=0,F=0,U=0,H=1e3,X=0,V=0,$=0,G="object"==typeof performance&&performance.now?performance:Date,Y="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function J(){return V||(Y(Q),V=G.now()+$)}function Q(){V=0}function W(){this._call=this._time=this._next=null}W.prototype=Z.prototype={constructor:W,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?J():+n)+(null==t?0:+t),this._next||B===this||(B?B._next=this:j=this,B=this),this._call=e,this._time=n,te()},stop:function(){this._call&&(this._call=null,this._time=1/0,te())}};function Z(e,t,n){var r=new W;return r.restart(e,t,n),r}function K(){V=(X=G.now())+$,R=F=0;try{!function(){J(),// Get the current time, if not already set.
++R;for(// Pretend we’ve set an alarm, if we haven’t already.
var e,t=j;t;)(e=V-t._time)>=0&&t._call.call(null,e),t=t._next;--R}()}finally{R=0,function(){var e,t,n=j,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:j=t);B=e,te(r)}(),V=0}}function ee(){var e=G.now(),t=e-X;t>H&&($-=t,X=e)}function te(e){if(!R){// Soonest alarm already set, or will be.
F&&(F=clearTimeout(F));// Strictly less than if we recomputed clockNow.
e-V>24?(e<1/0&&(F=setTimeout(K,e-G.now()-$)),U&&(U=clearInterval(U))):(U||(X=G.now(),U=setInterval(ee,H)),R=1,Y(K))}}var ne=3;function re(e){return e.x}function ae(e){return e.y}function oe(e){return e.z}var ie=10,fe=Math.PI*(3-Math.sqrt(5)),se=Math.PI/24;var ce=function(e){!function(e){if(!e)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],n=0;n<t.length;++n)if(e.hasOwnProperty(t[n]))throw new Error("Subject cannot be eventified, since it already has property '"+t[n]+"'")}
/**
 * @fileOverview Contains definition of the core graph object.
 */
// TODO: need to change storage layer:
// 1. Be able to get all nodes O(1)
// 2. Be able to get number of links O(1)
/**
 * @example
 *  var graph = require('ngraph.graph')();
 *  graph.addNode(1);     // graph has one node.
 *  graph.addLink(2, 3);  // now graph contains three nodes and one link.
 *
 */(e);var t=function(e){
// Store all event listeners to this hash. Key is event name, value is array
// of callback records.
//
// A callback record consists of callback function and its optional context:
// { 'eventName' => [{callback: function, ctx: object}] }
var t=Object.create(null);return{on:function(n,r,a){if("function"!=typeof r)throw new Error("callback is expected to be a function");var o=t[n];return o||(o=t[n]=[]),o.push({callback:r,ctx:a}),e},off:function(n,r){var a=void 0===n;if(a)
// Killing old events storage should be enough in this case:
return t=Object.create(null),e;if(t[n]){var o="function"!=typeof r;if(o)delete t[n];else for(var i=t[n],f=0;f<i.length;++f)i[f].callback===r&&i.splice(f,1)}return e},fire:function(n){var r=t[n];if(!r)return e;var a;arguments.length>1&&(a=Array.prototype.splice.call(arguments,1));for(var o=0;o<r.length;++o){var i=r[o];i.callback.apply(i.ctx,a)}return e}}}(e);return e.on=t.on,e.off=t.off,e.fire=t.fire,e};var ue=
/**
 * Creates a new graph
 */
function(e){"uniqueLinkId"in(
// Graph structure is maintained as dictionary of nodes
// and array of links. Each node has 'links' property which
// hold all links related to that node. And general links
// array is used to speed up all links enumeration. This is inefficient
// in terms of memory, but simplifies coding.
e=e||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now own each graph\nis considered to be not a multigraph by default (each edge is unique)."),e.multigraph=e.uniqueLinkId)
// Dear reader, the non-multigraphs do not guarantee that there is only
// one link for a given pair of node. When this option is set to false
// we can save some memory and CPU (18% faster for non-multigraph);
void 0===e.multigraph&&(e.multigraph=!1);var t="function"==typeof Object.create?Object.create(null):{},n=[],
// Hash of multi-edges. Used to track ids of edges between same nodes
r={},a=0,o=0,i=Object.keys?A:N,f=e.multigraph?function(e,t,n){
// TODO: Get rid of this method.
var a=pe(e,t),o=r.hasOwnProperty(a);if(o||x(e,t)){o||(r[a]=0);var i="@"+ ++r[a];a=pe(e+i,t+i)}return new le(e,t,n,a)}:function(e,t,n){var r=pe(e,t);return new le(e,t,n,r)},
// Our graph API provides means to listen to graph changes. Users can subscribe
// to be notified about changes in the graph by using `on` method. However
// in some cases they don't use it. To avoid unnecessary memory consumption
// we will not record graph changes until we have at least one subscriber.
// Code below supports this optimization.
//
// Accumulates all changes made during graph updates.
// Each change element contains:
//  changeType - one of the strings: 'add', 'remove' or 'update';
//  node - if change is related to node this property is set to changed graph's node;
//  link - if change is related to link this property is set to changed graph's link;
s=[],c=w,u=w,d=w,h=w,l={
/**
     * Adds node to the graph. If node with given id already exists in the graph
     * its data is extended with whatever comes in 'data' argument.
     *
     * @param nodeId the node's identifier. A string or number is preferred.
     * @param [data] additional data for the node being added. If node already
     *   exists its data object is augmented with the new one.
     *
     * @return {node} The newly added node or node with given id if it already exists.
     */
addNode:y,
/**
     * Adds a link to the graph. The function always create a new
     * link between two nodes. If one of the nodes does not exists
     * a new node is created.
     *
     * @param fromId link start node id;
     * @param toId link end node id;
     * @param [data] additional data to be set on the new link;
     *
     * @return {link} The newly created link
     */
addLink:function(e,t,r){d();var a=g(e)||y(e),o=g(t)||y(t),i=f(e,t,r);n.push(i),
// TODO: this is not cool. On large graphs potentially would consume more memory.
he(a,i),e!==t&&
// make sure we are not duplicating links for self-loops
he(o,i);return c(i,"add"),h(),i},
/**
     * Removes link from the graph. If link does not exist does nothing.
     *
     * @param link - object returned by addLink() or getLinks() methods.
     *
     * @returns true if link was removed; false otherwise.
     */
removeLink:m,
/**
     * Removes node with given id from the graph. If node does not exist in the graph
     * does nothing.
     *
     * @param nodeId node's identifier passed to addNode() function.
     *
     * @returns true if node was removed; false otherwise.
     */
removeNode:v,
/**
     * Gets node with given identifier. If node does not exist undefined value is returned.
     *
     * @param nodeId requested node identifier;
     *
     * @return {node} in with requested identifier or undefined if no such node exists.
     */
getNode:g,
/**
     * Gets number of nodes in this graph.
     *
     * @return number of nodes in the graph.
     */
getNodesCount:function(){return a},
/**
     * Gets total number of links in the graph.
     */
getLinksCount:function(){return n.length},
/**
     * Gets all links (inbound and outbound) from the node with given id.
     * If node with given id is not found null is returned.
     *
     * @param nodeId requested node identifier.
     *
     * @return Array of links from and to requested node if such node exists;
     *   otherwise null is returned.
     */
getLinks:function(e){var t=g(e);return t?t.links:null},
/**
     * Invokes callback on each node of the graph.
     *
     * @param {Function(node)} callback Function to be invoked. The function
     *   is passed one argument: visited node.
     */
forEachNode:i,
/**
     * Invokes callback on every linked (adjacent) node to the given one.
     *
     * @param nodeId Identifier of the requested node.
     * @param {Function(node, link)} callback Function to be called on all linked nodes.
     *   The function is passed two parameters: adjacent node and link object itself.
     * @param oriented if true graph treated as oriented.
     */
forEachLinkedNode:function(e,n,r){var a=g(e);if(a&&a.links&&"function"==typeof n)return r?function(e,n,r){for(var a=0;a<e.length;++a){var o=e[a];if(o.fromId===n&&r(t[o.toId],o))return!0;// Client does not need more iterations. Break now.
}}
// we will not fire anything until users of this library explicitly call `on()`
// method.
(a.links,e,n):function(e,n,r){for(var a=0;a<e.length;++a){var o=e[a],i=o.fromId===n?o.toId:o.fromId;if(r(t[i],o))return!0;// Client does not need more iterations. Break now.
}}(a.links,e,n)},
/**
     * Enumerates all links in the graph
     *
     * @param {Function(link)} callback Function to be called on all links in the graph.
     *   The function is passed one parameter: graph's link object.
     *
     * Link object contains at least the following fields:
     *  fromId - node id where link starts;
     *  toId - node id where link ends,
     *  data - additional data passed to graph.addLink() method.
     */
forEachLink:function(e){var t,r;if("function"==typeof e)for(t=0,r=n.length;t<r;++t)e(n[t])},
/**
     * Suspend all notifications about graph changes until
     * endUpdate is called.
     */
beginUpdate:d,
/**
     * Resumes all notifications about graph changes and fires
     * graph 'changed' event in case there are any pending changes.
     */
endUpdate:h,
/**
     * Removes all nodes and links from the graph.
     */
clear:function(){d(),i(function(e){v(e.id)}),h()},
/**
     * Detects whether there is a link between two nodes.
     * Operation complexity is O(n) where n - number of links of a node.
     * NOTE: this function is synonim for getLink()
     *
     * @returns link if there is one. null otherwise.
     */
hasLink:x,
/**
     * Detects whether there is a node with given id
     * 
     * Operation complexity is O(1)
     * NOTE: this function is synonim for getNode()
     *
     * @returns node if there is one; Falsy value otherwise.
     */
hasNode:g,
/**
     * Gets an edge between two nodes.
     * Operation complexity is O(n) where n - number of links of a node.
     *
     * @param {string} fromId link start identifier
     * @param {string} toId link end identifier
     *
     * @returns link if there is one. null otherwise.
     */
getLink:x};
// this is our public API:
// this will add `on()` and `fire()` methods.
return ce(l),function(){var e=l.on;
// replace real `on` with our temporary on, which will trigger change
// modification monitoring:
l.on=function(){
// delegate to real `on` handler:
// now it's time to start tracking stuff:
return l.beginUpdate=d=_,l.endUpdate=h=k,c=p,u=b,
// this will replace current `on` method with real pub/sub from `eventify`.
l.on=e,e.apply(l,arguments)}}(),l;function p(e,t){s.push({link:e,changeType:t})}function b(e,t){s.push({node:e,changeType:t})}function y(e,n){if(void 0===e)throw new Error("Invalid node identifier");d();var r=g(e);return r?(r.data=n,u(r,"update")):(r=new
/**
 * Internal structure to represent node;
 */
function(e,t){this.id=e,this.links=null,this.data=t}(e,n),a++,u(r,"add")),t[e]=r,h(),r}function g(e){return t[e]}function v(e){var n=g(e);if(!n)return!1;d();var r=n.links;if(r){n.links=null;for(var o=0;o<r.length;++o)m(r[o])}return delete t[e],a--,u(n,"remove"),h(),!0}function m(e){if(!e)return!1;var t=de(e,n);if(t<0)return!1;d(),n.splice(t,1);var r=g(e.fromId),a=g(e.toId);return r&&(t=de(e,r.links))>=0&&r.links.splice(t,1),a&&(t=de(e,a.links))>=0&&a.links.splice(t,1),c(e,"remove"),h(),!0}function x(e,t){
// TODO: Use sorted links to speed this up
var n,r=g(e);if(!r||!r.links)return null;for(n=0;n<r.links.length;++n){var a=r.links[n];if(a.fromId===e&&a.toId===t)return a}return null;// no link.
}function w(){}
// Enter, Exit modification allows bulk graph updates without firing events.
function _(){o+=1}function k(){0===(o-=1)&&s.length>0&&(l.fire("changed",s),s.length=0)}function A(e){if("function"==typeof e)for(var n=Object.keys(t),r=0;r<n.length;++r)if(e(t[n[r]]))return!0;// client doesn't want to proceed. Return.
}function N(e){if("function"==typeof e){var n;for(n in t)if(e(t[n]))return!0;// client doesn't want to proceed. Return.
}}}
// need this for old browsers. Should this be a separate module?;
function de(e,t){if(!t)return-1;if(t.indexOf)return t.indexOf(e);var n,r=t.length;for(n=0;n<r;n+=1)if(t[n]===e)return n;return-1}function he(e,t){e.links?e.links.push(t):e.links=[t]}
/**
 * Internal structure to represent links;
 */function le(e,t,n,r){this.fromId=e,this.toId=t,this.data=n,this.id=r}function pe(e,t){return e.toString()+"👉 "+t.toString()}var be=
/**
 * Represents a physical spring. Spring connects two bodies, has rest length
 * stiffness coefficient and optional weight
 */
function(e,t,n,r,a){this.from=e,this.to=t,this.length=n,this.coeff=r,this.weight="number"==typeof a?a:1};var ye=
/**
 * Augments `target` object with getter/setter functions, which modify settings
 *
 * @example
 *  var target = {};
 *  exposeProperties({ age: 42}, target);
 *  target.age(); // returns 42
 *  target.age(24); // make age 24;
 *
 *  var filteredTarget = {};
 *  exposeProperties({ age: 42, name: 'John'}, filteredTarget, ['name']);
 *  filteredTarget.name(); // returns 'John'
 *  filteredTarget.age === undefined; // true
 */
function(e,t,n){if("[object Array]"===Object.prototype.toString.call(n))for(var r=0;r<n.length;++r)ge(e,t,n[r]);else for(var a in e)ge(e,t,a)};function ge(e,t,n){if(e.hasOwnProperty(n)){if("function"==typeof t[n])
// this accessor is already defined. Ignore it
return;t[n]=function(r){return void 0!==r?(e[n]=r,t):e[n]}}}var ve=
/**
 * Augments `target` with properties in `options`. Does not override
 * target's properties if they are defined and matches expected type in 
 * options
 *
 * @returns {Object} merged object
 */
function e(t,n){var r;t||(t={});if(n)for(r in n)if(n.hasOwnProperty(r)){var a=t.hasOwnProperty(r),o=typeof n[r],i=!a||typeof t[r]!==o;i?t[r]=n[r]:"object"===o&&(
// go deep, don't care about loops here, we are simple API!:
t[r]=e(t[r],n[r]))}return t};var me={random:xe,randomIterator:
/*
 * Creates iterator over array, which returns items of array in random order
 * Time complexity is guaranteed to be O(n);
 */
function(e,t){var n=t||xe();if("function"!=typeof n.next)throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:function(t){var r,a,o;for(r=e.length-1;r>0;--r)a=n.next(r+1),// i inclusive
o=e[a],e[a]=e[r],e[r]=o,t(o);e.length&&t(e[0])},
/**
         * Shuffles array randomly, in place.
         */
shuffle:function(){var t,r,a;for(t=e.length-1;t>0;--t)r=n.next(t+1),// i inclusive
a=e[r],e[r]=e[t],e[t]=a;return e}}}
/**
 * Internal data structure to represent 2D QuadTree node
 */};
/**
 * Creates seeded PRNG with two methods:
 *   next() and nextDouble()
 */function xe(e){var t="number"==typeof e?e:+new Date,n=function(){return(268435455&(t=4294967295&(3042594569^(t=(t=4294967295&((t=(t=4294967295&(3345072700^(
// Robert Jenkins' 32 bit integer hash function.
t=t+2127912214+(t<<12)&4294967295)^t>>>19))+374761393+(t<<5)&4294967295)+3550635116^t<<9))+4251993797+(t<<3)&4294967295)^t>>>16)))/268435456};return{
/**
       * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)
       *
       * @param maxValue Number REQUIRED. Ommitting this number will result in NaN values from PRNG.
       */
next:function(e){return Math.floor(n()*e)},
/**
       * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)
       * This function is the same as Math.random() (except that it could be seeded)
       */
nextDouble:function(){return n()}}}var we=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// 0 | 1
// -----
// 2 | 3
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0},_e=ke;
/**
 * Our implmentation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function ke(){this.stack=[],this.popIdx=0}ke.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressue: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new function(e,t){this.node=e,// QuadTree node
this.body=t}(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var Ae=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return n<1e-8&&r<1e-8},Ne=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=me.random(1984),n=we,r=_e,a=Ae,o=e.gravity,i=[],f=new r,s=e.theta,c=[],u=0,d=h();return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,a=Number.MIN_VALUE,o=Number.MIN_VALUE,i=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
t=i;for(;t--;){var f=e[t].pos.x,s=e[t].pos.y;f<n&&(n=f),f>a&&(a=f),s<r&&(r=s),s>o&&(o=s)}
// Squarify the bounds.
var c=a-n,p=o-r;c>p?o=r+c:a=n+p;u=0,(d=h()).left=n,d.right=a,d.top=r,d.bottom=o,(t=i-1)>=0&&(d.body=e[t]);for(;t--;)l(e[t])},
/**
     * Gets root node if its present
     */
getRoot:function(){return d},updateBodyForce:function(e){var n,r,a,f,c=i,u=0,h=0,l=1,p=0,b=1;c[0]=d;for(;l;){var y=c[p],g=y.body;l-=1,p+=1;var v=g!==e;g&&v?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=g.pos.x-e.pos.x,a=g.pos.y-e.pos.y,0===(f=Math.sqrt(r*r+a*a))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=Math.sqrt(r*r+a*a))
// This is standard gravition force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
,n=o*g.mass*e.mass/(f*f*f),u+=n*r,h+=n*a):v&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=y.massX/y.mass-e.pos.x,a=y.massY/y.mass-e.pos.y,0===(f=Math.sqrt(r*r+a*a))&&(
// Sorry about code duplucation. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=Math.sqrt(r*r+a*a))
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
,(y.right-y.left)/f<s?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
n=o*y.mass*e.mass/(f*f*f),u+=n*r,h+=n*a):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
y.quad0&&(c[b]=y.quad0,l+=1,b+=1),y.quad1&&(c[b]=y.quad1,l+=1,b+=1),y.quad2&&(c[b]=y.quad2,l+=1,b+=1),y.quad3&&(c[b]=y.quad3,l+=1,b+=1)))}e.force.x+=u,e.force.y+=h},options:function(e){return e?("number"==typeof e.gravity&&(o=e.gravity),"number"==typeof e.theta&&(s=e.theta),this):{gravity:o,theta:s}}};function h(){
// To avoid pressure on GC we reuse nodes.
var e=c[u];return e?(e.quad0=null,e.quad1=null,e.quad2=null,e.quad3=null,e.body=null,e.mass=e.massX=e.massY=0,e.left=e.right=e.top=e.bottom=0):(e=new n,c[u]=e),++u,e}function l(e){for(f.reset(),f.push(d,e);!f.isEmpty();){var n=f.pop(),r=n.node,o=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var i=r.body;// internal nodes do not cary bodies
if(r.body=null,a(i.pos,o.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var s=3;do{var c=t.nextDouble(),u=(r.right-r.left)*c,l=(r.bottom-r.top)*c;i.pos.x=r.left+u,i.pos.y=r.top+l,s-=1}while(s>0&&a(i.pos,o.pos));if(0===s&&a(i.pos,o.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
f.push(r,i),f.push(r,o)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var p=o.pos.x,b=o.pos.y;r.mass=r.mass+o.mass,r.massX=r.massX+o.mass*p,r.massY=r.massY+o.mass*b;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var y=0,// Assume we are in the 0's quad.
g=r.left,v=(r.right+g)/2,m=r.top,x=(r.bottom+m)/2;p>v&&(// somewhere in the eastern part.
y+=1,g=v,v=r.right),b>x&&(// and in south.
y+=2,m=x,x=r.bottom);var w=Me(r,y);w?
// continue searching in this quadrant.
f.push(w,o):(
// The node is internal but this quadrant is not taken. Add
// subnode to it.
(w=h()).left=g,w.top=m,w.right=v,w.bottom=x,w.body=o,qe(r,y,w))}}}};
/**
 * This is Barnes Hut simulation algorithm for 2d case. Implementation
 * is highly optimized (avoids recusion and gc pressure)
 *
 * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
 */function Me(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:null}function qe(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t&&(e.quad3=n)}var ze=function(e,t){var n=me.random(42),r={x1:0,y1:0,x2:0,y2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,a=Number.MAX_VALUE,o=Number.MIN_VALUE,i=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var f=e[t];f.isPinned?(f.pos.x=f.prevPos.x,f.pos.y=f.prevPos.y):(f.prevPos.x=f.pos.x,f.prevPos.y=f.pos.y),f.pos.x<n&&(n=f.pos.x),f.pos.x>o&&(o=f.pos.x),f.pos.y<a&&(a=f.pos.y),f.pos.y>i&&(i=f.pos.y)}r.x1=n,r.x2=o,r.y1=a,r.y2=i},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0},getBestNewPosition:function(e){var a=r,o=0,i=0;if(e.length){for(var f=0;f<e.length;++f)o+=e[f].pos.x,i+=e[f].pos.y;o/=e.length,i/=e.length}else o=(a.x1+a.x2)/2,i=(a.y1+a.y2)/2;var s=t.springLength;return{x:o+n.next(s)-s/2,y:i+n.next(s)-s/2}}}},Ee=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y}};
// let easy access to dragCoeff:
return ye(e=ve(e,{dragCoeff:.02}),t,["dragCoeff"]),t},Te=function(e){var t=ve,n=me.random(42),r={
/**
     * Upsates forces acting on a spring
     */
update:function(t){var r=t.from,a=t.to,o=t.length<0?e.springLength:t.length,i=a.pos.x-r.pos.x,f=a.pos.y-r.pos.y,s=Math.sqrt(i*i+f*f);0===s&&(i=(n.nextDouble()-.5)/50,f=(n.nextDouble()-.5)/50,s=Math.sqrt(i*i+f*f));var c=s-o,u=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*c/s*t.weight;r.force.x+=u*i,r.force.y+=u*f,a.force.x-=u*i,a.force.y-=u*f}};return ye(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},Pe=function(e,t){var n,r=0,a=0,o=0,i=0,f=e.length;if(0===f)return 0;for(n=0;n<f;++n){var s=e[n],c=t/s.mass;s.velocity.x+=c*s.force.x,s.velocity.y+=c*s.force.y;var u=s.velocity.x,d=s.velocity.y,h=Math.sqrt(u*u+d*d);h>1&&(s.velocity.x=u/h,s.velocity.y=d/h),r=t*s.velocity.x,o=t*s.velocity.y,s.pos.x+=r,s.pos.y+=o,a+=Math.abs(r),i+=Math.abs(o)}return(a*a+i*i)/f};
/**
 * Represents drag force, which reduces force value on each step by given
 * coefficient.
 *
 * @param {Object} options for the drag force
 * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
 */var Ie={Body:Le,Vector2d:Oe,Body3d:Ce,Vector3d:Se};function Le(e,t){this.pos=new Oe(e,t),this.prevPos=new Oe(e,t),this.force=new Oe,this.velocity=new Oe,this.mass=1}Le.prototype.setPosition=function(e,t){this.prevPos.x=this.pos.x=e,this.prevPos.y=this.pos.y=t};function Oe(e,t){e&&"number"!=typeof e?(
// could be another vector
this.x="number"==typeof e.x?e.x:0,this.y="number"==typeof e.y?e.y:0):(this.x="number"==typeof e?e:0,this.y="number"==typeof t?t:0)}Oe.prototype.reset=function(){this.x=this.y=0};function Ce(e,t,n){this.pos=new Se(e,t,n),this.prevPos=new Se(e,t,n),this.force=new Se,this.velocity=new Se,this.mass=1}Ce.prototype.setPosition=function(e,t,n){this.prevPos.x=this.pos.x=e,this.prevPos.y=this.pos.y=t,this.prevPos.z=this.pos.z=n};function Se(e,t,n){e&&"number"!=typeof e?(
// could be another vector
this.x="number"==typeof e.x?e.x:0,this.y="number"==typeof e.y?e.y:0,this.z="number"==typeof e.z?e.z:0):(this.x="number"==typeof e?e:0,this.y="number"==typeof t?t:0,this.z="number"==typeof n?n:0)}Se.prototype.reset=function(){this.x=this.y=this.z=0};var De=function(e){return new Ie.Body(e)},je=function(e){var t=be,n=ye,r=ce,a=(e=ve(e,{
/**
       * Ideal length for links (springs in physical model).
       */
springLength:30,
/**
       * Hook's law coefficient. 1 - solid spring.
       */
springCoeff:8e-4,
/**
       * Coulomb's law coefficient. It's used to repel nodes thus should be negative
       * if you make it positive nodes start attract each other :).
       */
gravity:-1.2,
/**
       * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).
       * The closer it's to 1 the more nodes algorithm will have to go through.
       * Setting it to one makes Barnes Hut simulation no different from
       * brute-force forces calculation (each node is considered).
       */
theta:.8,
/**
       * Drag force coefficient. Used to slow down system, thus should be less than 1.
       * The closer it is to 0 the less tight system will be.
       */
dragCoeff:.02,
/**
       * Default time step (dt) for forces integration
       */
timeStep:20})).createQuadTree||Ne,o=e.createBounds||ze,i=e.createDragForce||Ee,f=e.createSpringForce||Te,s=e.integrator||Pe,c=e.createBody||De,u=[],// Bodies in this simulation.
d=[],// Springs in this simulation.
h=a(e),l=o(u,e),p=f(e),b=i(e),y={
/**
     * Array of bodies, registered with current simulator
     *
     * Note: To add new body, use addBody() method. This property is only
     * exposed for testing/performance purposes.
     */
bodies:u,quadTree:h,
/**
     * Array of springs, registered with current simulator
     *
     * Note: To add new spring, use addSpring() method. This property is only
     * exposed for testing/performance purposes.
     */
springs:d,
/**
     * Returns settings with which current simulator was initialized
     */
settings:e,
/**
     * Performs one step of force simulation.
     *
     * @returns {boolean} true if system is considered stable; False otherwise.
     */
step:function(){!function(){
// Accumulate forces acting on bodies.
var e,t=u.length;if(t)// performance: O(n * log n)
for(
// only add bodies if there the array is not empty:
h.insertBodies(u);t--;)
// If body is pinned there is no point updating its forces - it should
// never move:
(e=u[t]).isPinned||(e.force.reset(),h.updateBodyForce(e),b.update(e));t=d.length;for(;t--;)p.update(d[t])}();var t=s(u,e.timeStep);return l.update(),t},
/**
     * Adds body to the system
     *
     * @param {ngraph.physics.primitives.Body} body physical body
     *
     * @returns {ngraph.physics.primitives.Body} added body
     */
addBody:function(e){if(!e)throw new Error("Body is required");return u.push(e),e},
/**
     * Adds body to the system at given position
     *
     * @param {Object} pos position of a body
     *
     * @returns {ngraph.physics.primitives.Body} added body
     */
addBodyAt:function(e){if(!e)throw new Error("Body position is required");var t=c(e);return u.push(t),t},
/**
     * Removes body from the system
     *
     * @param {ngraph.physics.primitives.Body} body to remove
     *
     * @returns {Boolean} true if body found and removed. falsy otherwise;
     */
removeBody:function(e){if(e){var t=u.indexOf(e);if(!(t<0))return u.splice(t,1),0===u.length&&l.reset(),!0}},
/**
     * Adds a spring to this simulation.
     *
     * @returns {Object} - a handle for a spring. If you want to later remove
     * spring pass it to removeSpring() method.
     */
addSpring:function(e,n,r,a,o){if(!e||!n)throw new Error("Cannot add null spring to force simulator");"number"!=typeof r&&(r=-1);var i=new t(e,n,r,o>=0?o:-1,a);
// TODO: could mark simulator as dirty.
return d.push(i),i},
/**
     * Returns amount of movement performed on last step() call
     */
getTotalMovement:function(){return 0},
/**
     * Removes spring from the system
     *
     * @param {Object} spring to remove. Spring is an object returned by addSpring
     *
     * @returns {Boolean} true if spring found and removed. falsy otherwise;
     */
removeSpring:function(e){if(e){var t=d.indexOf(e);return t>-1?(d.splice(t,1),!0):void 0}},getBestNewBodyPosition:function(e){return l.getBestNewPosition(e)},
/**
     * Returns bounding box which covers all bodies
     */
getBBox:function(){return l.box},gravity:function(t){return void 0!==t?(e.gravity=t,h.options({gravity:t}),this):e.gravity},theta:function(t){return void 0!==t?(e.theta=t,h.options({theta:t}),this):e.theta}};
// allow settings modification via public API:
return n(e,y),r(y),y};
/**
 * Manages a simulation of physical forces acting on bodies and springs.
 */var Be=
/**
 * Creates force based layout for a given graph.
 *
 * @param {ngraph.graph} graph which needs to be laid out
 * @param {object} physicsSettings if you need custom settings
 * for physics simulator you can pass your own settings here. If it's not passed
 * a default one will be created.
 */
function(e,t){if(!e)throw new Error("Graph structure cannot be undefined");var n=je(t),r=
/**
   * Calculates mass of a body, which corresponds to node with given id.
   *
   * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated
   * @returns {Number} recommended mass of the body;
   */
function(t){var n=e.getLinks(t);return n?1+n.length/3:1};t&&"function"==typeof t.nodeMass&&(r=t.nodeMass);var a=Object.create(null),o={},i=0,f=n.settings.springTransform||Fe;
// Initialize physics with what we have in the graph:
i=0,e.forEachNode(function(e){d(e.id),i+=1}),e.forEachLink(l),e.on("changed",u);var s=!1,c={
/**
     * Performs one step of iterative layout algorithm
     *
     * @returns {boolean} true if the system should be considered stable; Flase otherwise.
     * The system is stable if no further call to `step()` can improve the layout.
     */
step:function(){if(0===i)return!0;// TODO: This will never fire 'stable'
var e=n.step();
// Save the movement in case if someone wants to query it in the step
// callback.
c.lastMove=e,
// Allow listeners to perform low-level actions after nodes are updated.
c.fire("step");var t=e/i,r=t<=.01;// TODO: The number is somewhat arbitrary...
s!==r&&(s=r,a=r,c.fire("stable",a));var a;return r},
/**
     * For a given `nodeId` returns position
     */
getNodePosition:function(e){return y(e).pos},
/**
     * Sets position of a node to a given coordinates
     * @param {string} nodeId node identifier
     * @param {number} x position of a node
     * @param {number} y position of a node
     * @param {number=} z position of node (only if applicable to body)
     */
setNodePosition:function(e){var t=y(e);t.setPosition.apply(t,Array.prototype.slice.call(arguments,1))},
/**
     * @returns {Object} Link position by link id
     * @returns {Object.from} {x, y} coordinates of link start
     * @returns {Object.to} {x, y} coordinates of link end
     */
getLinkPosition:function(e){var t=o[e];if(t)return{from:t.from.pos,to:t.to.pos}},
/**
     * @returns {Object} area required to fit in the graph. Object contains
     * `x1`, `y1` - top left coordinates
     * `x2`, `y2` - bottom right coordinates
     */
getGraphRect:function(){return n.getBBox()},
/**
     * Iterates over each body in the layout simulator and performs a callback(body, nodeId)
     */
forEachBody:function(e){Object.keys(a).forEach(function(t){e(a[t],t)})},
/*
     * Requests layout algorithm to pin/unpin node to its current position
     * Pinned nodes should not be affected by layout algorithm and always
     * remain at their position
     */
pinNode:function(e,t){var n=y(e.id);n.isPinned=!!t},
/**
     * Checks whether given graph's node is currently pinned
     */
isNodePinned:function(e){return y(e.id).isPinned},
/**
     * Request to release all resources
     */
dispose:function(){e.off("changed",u),c.fire("disposed")},
/**
     * Gets physical body for a given node id. If node is not found undefined
     * value is returned.
     */
getBody:function(e){return a[e]},
/**
     * Gets spring for a given edge.
     *
     * @param {string} linkId link identifer. If two arguments are passed then
     * this argument is treated as formNodeId
     * @param {string=} toId when defined this parameter denotes head of the link
     * and first argument is trated as tail of the link (fromId)
     */
getSpring:function(t,n){var r;if(void 0===n)
// assume fromId as a linkId:
r="object"!=typeof t?t:t.id;else{
// toId is defined, should grab link:
var a=e.hasLink(t,n);if(!a)return;r=a.id}return o[r]},
/**
     * [Read only] Gets current physics simulator
     */
simulator:n,
/**
     * Gets the graph that was used for layout
     */
graph:e,
/**
     * Gets amount of movement performed during last step opeartion
     */
lastMove:0};return ce(c),c;function u(t){for(var n=0;n<t.length;++n){var r=t[n];"add"===r.changeType?(r.node&&d(r.node.id),r.link&&l(r.link)):"remove"===r.changeType&&(r.node&&h(r.node),r.link&&p(r.link))}i=e.getNodesCount()}function d(t){var r=a[t];if(!r){var o=e.getNode(t);if(!o)throw new Error("initBody() was called with unknown node id");var i=o.position;if(!i){var f=function(e){
// TODO: Could probably be done better on memory
var t=[];if(!e.links)return t;for(var n=Math.min(e.links.length,2),r=0;r<n;++r){var o=e.links[r],i=o.fromId!==e.id?a[o.fromId]:a[o.toId];i&&i.pos&&t.push(i)}return t}(o);i=n.getBestNewBodyPosition(f)}(r=n.addBodyAt(i)).id=t,a[t]=r,b(t),(s=o)&&(s.isPinned||s.data&&s.data.isPinned)&&(r.isPinned=!0)}
/**
   * Checks whether graph node has in its settings pinned attribute,
   * which means layout algorithm cannot move it. Node can be preconfigured
   * as pinned, if it has "isPinned" attribute, or when node.data has it.
   *
   * @param {Object} node a graph node to check
   * @return {Boolean} true if node should be treated as pinned; false otherwise.
   */
var s}function h(e){var t=e.id,r=a[t];r&&(a[t]=null,delete a[t],n.removeBody(r))}function l(e){b(e.fromId),b(e.toId);var t=a[e.fromId],r=a[e.toId],i=n.addSpring(t,r,e.length);f(e,i),o[e.id]=i}function p(t){var r=o[t.id];if(r){var a=e.getNode(t.fromId),i=e.getNode(t.toId);a&&b(a.id),i&&b(i.id),delete o[t.id],n.removeSpring(r)}}function b(e){var t=a[e];if(t.mass=r(e),Number.isNaN(t.mass))throw new Error("Node mass should be a number")}function y(e){var t=a[e];return t||(d(e),t=a[e]),t}},Re=je;function Fe(){}Be.simulator=Re;var Ue=
/**
 * Represents a physical spring. Spring connects two bodies, has rest length
 * stiffness coefficient and optional weight
 */
function(e,t,n,r,a){this.from=e,this.to=t,this.length=n,this.coeff=r,this.weight="number"==typeof a?a:1}
/**
 * Internal data structure to represent 2D QuadTree node
 */;var He=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// 0 | 1
// -----
// 2 | 3
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0},Xe=Ve;
/**
 * Our implmentation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function Ve(){this.stack=[],this.popIdx=0}Ve.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressue: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new function(e,t){this.node=e,// QuadTree node
this.body=t}(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var $e=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return n<1e-8&&r<1e-8},Ge=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=me.random(1984),n=He,r=Xe,a=$e,o=e.gravity,i=[],f=new r,s=e.theta,c=[],u=0,d=function(){
// To avoid pressure on GC we reuse nodes.
var e=c[u];return e?(e.quad0=null,e.quad1=null,e.quad2=null,e.quad3=null,e.body=null,e.mass=e.massX=e.massY=0,e.left=e.right=e.top=e.bottom=0):(e=new n,c[u]=e),++u,e},h=d(),
// Inserts body to the tree
l=function(e){for(f.reset(),f.push(h,e);!f.isEmpty();){var n=f.pop(),r=n.node,o=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var i=r.body;// internal nodes do not cary bodies
if(r.body=null,a(i.pos,o.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var s=3;do{var c=t.nextDouble(),u=(r.right-r.left)*c,l=(r.bottom-r.top)*c;i.pos.x=r.left+u,i.pos.y=r.top+l,s-=1}while(s>0&&a(i.pos,o.pos));if(0===s&&a(i.pos,o.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
f.push(r,i),f.push(r,o)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var p=o.pos.x,b=o.pos.y;r.mass=r.mass+o.mass,r.massX=r.massX+o.mass*p,r.massY=r.massY+o.mass*b;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var y=0,// Assume we are in the 0's quad.
g=r.left,v=(r.right+g)/2,m=r.top,x=(r.bottom+m)/2;if(p>v){// somewhere in the eastern part.
y+=1;var w=g;g=v,v+=v-w}if(b>x){// and in south.
y+=2;var _=m;m=x,x+=x-_}var k=Ye(r,y);k?
// continue searching in this quadrant.
f.push(k,o):(
// The node is internal but this quadrant is not taken. Add
// subnode to it.
(k=d()).left=g,k.top=m,k.right=v,k.bottom=x,k.body=o,Je(r,y,k))}}};return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,a=Number.MIN_VALUE,o=Number.MIN_VALUE,i=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
for(t=i;t--;){var f=e[t].pos.x,s=e[t].pos.y;f<n&&(n=f),f>a&&(a=f),s<r&&(r=s),s>o&&(o=s)}
// Squarify the bounds.
var c=a-n,p=o-r;for(c>p?o=r+c:a=n+p,u=0,(h=d()).left=n,h.right=a,h.top=r,h.bottom=o,(t=i-1)>0&&(h.body=e[t]);t--;)l(e[t])},updateBodyForce:function(e){var n,r,a,f,c=i,u=0,d=0,l=1,p=0,b=1;for(c[0]=h;l;){var y=c[p],g=y.body;l-=1,p+=1;var v=g!==e;g&&v?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=g.pos.x-e.pos.x,a=g.pos.y-e.pos.y,0===(f=Math.sqrt(r*r+a*a))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=Math.sqrt(r*r+a*a))
// This is standard gravition force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
,u+=(n=o*g.mass*e.mass/(f*f*f))*r,d+=n*a):v&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=y.massX/y.mass-e.pos.x,a=y.massY/y.mass-e.pos.y,0===(f=Math.sqrt(r*r+a*a))&&(
// Sorry about code duplucation. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=Math.sqrt(r*r+a*a))
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
,(y.right-y.left)/f<s?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
u+=(n=o*y.mass*e.mass/(f*f*f))*r,d+=n*a):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
y.quad0&&(c[b]=y.quad0,l+=1,b+=1),y.quad1&&(c[b]=y.quad1,l+=1,b+=1),y.quad2&&(c[b]=y.quad2,l+=1,b+=1),y.quad3&&(c[b]=y.quad3,l+=1,b+=1)))}e.force.x+=u,e.force.y+=d},options:function(e){return e?("number"==typeof e.gravity&&(o=e.gravity),"number"==typeof e.theta&&(s=e.theta),this):{gravity:o,theta:s}}}};
/**
 * This is Barnes Hut simulation algorithm for 2d case. Implementation
 * is highly optimized (avoids recusion and gc pressure)
 *
 * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
 */function Ye(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:null}function Je(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t&&(e.quad3=n)}var Qe=function(e,t){var n=me.random(42),r={x1:0,y1:0,x2:0,y2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,a=Number.MAX_VALUE,o=Number.MIN_VALUE,i=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var f=e[t];f.isPinned?(f.pos.x=f.prevPos.x,f.pos.y=f.prevPos.y):(f.prevPos.x=f.pos.x,f.prevPos.y=f.pos.y),f.pos.x<n&&(n=f.pos.x),f.pos.x>o&&(o=f.pos.x),f.pos.y<a&&(a=f.pos.y),f.pos.y>i&&(i=f.pos.y)}r.x1=n,r.x2=o,r.y1=a,r.y2=i},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0},getBestNewPosition:function(e){var a=r,o=0,i=0;if(e.length){for(var f=0;f<e.length;++f)o+=e[f].pos.x,i+=e[f].pos.y;o/=e.length,i/=e.length}else o=(a.x1+a.x2)/2,i=(a.y1+a.y2)/2;var s=t.springLength;return{x:o+n.next(s)-s/2,y:i+n.next(s)-s/2}}}},We=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y}};
// let easy access to dragCoeff:
return ye(e=ve(e,{dragCoeff:.02}),t,["dragCoeff"]),t},Ze=function(e){var t=ve,n=me.random(42),r={
/**
     * Upsates forces acting on a spring
     */
update:function(t){var r=t.from,a=t.to,o=t.length<0?e.springLength:t.length,i=a.pos.x-r.pos.x,f=a.pos.y-r.pos.y,s=Math.sqrt(i*i+f*f);0===s&&(i=(n.nextDouble()-.5)/50,f=(n.nextDouble()-.5)/50,s=Math.sqrt(i*i+f*f));var c=s-o,u=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*c/s*t.weight;r.force.x+=u*i,r.force.y+=u*f,a.force.x-=u*i,a.force.y-=u*f}};return ye(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},Ke=function(e,t){var n,r=0,a=0,o=0,i=0,f=e.length;if(0===f)return 0;for(n=0;n<f;++n){var s=e[n],c=t/s.mass;s.velocity.x+=c*s.force.x,s.velocity.y+=c*s.force.y;var u=s.velocity.x,d=s.velocity.y,h=Math.sqrt(u*u+d*d);h>1&&(s.velocity.x=u/h,s.velocity.y=d/h),r=t*s.velocity.x,o=t*s.velocity.y,s.pos.x+=r,s.pos.y+=o,a+=Math.abs(r),i+=Math.abs(o)}return(a*a+i*i)/f};
/**
 * Represents drag force, which reduces force value on each step by given
 * coefficient.
 *
 * @param {Object} options for the drag force
 * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
 */var et=function(e){return new Ie.Body(e)},tt=function(e){var t=Ue,n=ye,r=ce,a=(e=ve(e,{
/**
       * Ideal length for links (springs in physical model).
       */
springLength:30,
/**
       * Hook's law coefficient. 1 - solid spring.
       */
springCoeff:8e-4,
/**
       * Coulomb's law coefficient. It's used to repel nodes thus should be negative
       * if you make it positive nodes start attract each other :).
       */
gravity:-1.2,
/**
       * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).
       * The closer it's to 1 the more nodes algorithm will have to go through.
       * Setting it to one makes Barnes Hut simulation no different from
       * brute-force forces calculation (each node is considered).
       */
theta:.8,
/**
       * Drag force coefficient. Used to slow down system, thus should be less than 1.
       * The closer it is to 0 the less tight system will be.
       */
dragCoeff:.02,
/**
       * Default time step (dt) for forces integration
       */
timeStep:20,
/**
        * Maximum movement of the system which can be considered as stabilized
        */
stableThreshold:.009})).createQuadTree||Ge,o=e.createBounds||Qe,i=e.createDragForce||We,f=e.createSpringForce||Ze,s=e.integrator||Ke,c=e.createBody||et,u=[],// Bodies in this simulation.
d=[],// Springs in this simulation.
h=a(e),l=o(u,e),p=f(e),b=i(e),y=0,g=!1,v={
/**
     * Array of bodies, registered with current simulator
     *
     * Note: To add new body, use addBody() method. This property is only
     * exposed for testing/performance purposes.
     */
bodies:u,
/**
     * Array of springs, registered with current simulator
     *
     * Note: To add new spring, use addSpring() method. This property is only
     * exposed for testing/performance purposes.
     */
springs:d,
/**
     * Returns settings with which current simulator was initialized
     */
settings:e,
/**
     * Performs one step of force simulation.
     *
     * @returns {boolean} true if system is considered stable; False otherwise.
     */
step:function(){!function(){
// Accumulate forces acting on bodies.
var e,t=u.length;if(t)// performance: O(n * log n)
for(
// only add bodies if there the array is not empty:
h.insertBodies(u);t--;)
// If body is pinned there is no point updating its forces - it should
// never move:
(e=u[t]).isPinned||(e.force.reset(),h.updateBodyForce(e),b.update(e));t=d.length;for(;t--;)p.update(d[t])}(),y=s(u,e.timeStep),l.update();var t=y<e.stableThreshold;return g!==t&&v.fire("stable",t),g=t,t},
/**
     * Adds body to the system
     *
     * @param {ngraph.physics.primitives.Body} body physical body
     *
     * @returns {ngraph.physics.primitives.Body} added body
     */
addBody:function(e){if(!e)throw new Error("Body is required");return u.push(e),e},
/**
     * Adds body to the system at given position
     *
     * @param {Object} pos position of a body
     *
     * @returns {ngraph.physics.primitives.Body} added body
     */
addBodyAt:function(e){if(!e)throw new Error("Body position is required");var t=c(e);return u.push(t),t},
/**
     * Removes body from the system
     *
     * @param {ngraph.physics.primitives.Body} body to remove
     *
     * @returns {Boolean} true if body found and removed. falsy otherwise;
     */
removeBody:function(e){if(e){var t=u.indexOf(e);if(!(t<0))return u.splice(t,1),0===u.length&&l.reset(),!0}},
/**
     * Adds a spring to this simulation.
     *
     * @returns {Object} - a handle for a spring. If you want to later remove
     * spring pass it to removeSpring() method.
     */
addSpring:function(e,n,r,a,o){if(!e||!n)throw new Error("Cannot add null spring to force simulator");"number"!=typeof r&&(r=-1);var i=new t(e,n,r,o>=0?o:-1,a);
// TODO: could mark simulator as dirty.
return d.push(i),i},
/**
     * Returns amount of movement performed on last step() call
     */
getTotalMovement:function(){return y},
/**
     * Removes spring from the system
     *
     * @param {Object} spring to remove. Spring is an object returned by addSpring
     *
     * @returns {Boolean} true if spring found and removed. falsy otherwise;
     */
removeSpring:function(e){if(e){var t=d.indexOf(e);return t>-1?(d.splice(t,1),!0):void 0}},getBestNewBodyPosition:function(e){return l.getBestNewPosition(e)},
/**
     * Returns bounding box which covers all bodies
     */
getBBox:function(){return l.box},gravity:function(t){return void 0!==t?(e.gravity=t,h.options({gravity:t}),this):e.gravity},theta:function(t){return void 0!==t?(e.theta=t,h.options({theta:t}),this):e.theta}};
// allow settings modification via public API:
return n(e,v),r(v),v};
/**
 * Manages a simulation of physical forces acting on bodies and springs.
 */var nt=
/**
 * Creates force based layout for a given graph.
 * @param {ngraph.graph} graph which needs to be laid out
 * @param {object} physicsSettings if you need custom settings
 * for physics simulator you can pass your own settings here. If it's not passed
 * a default one will be created.
 */
function(e,t){if(!e)throw new Error("Graph structure cannot be undefined");var n=tt(t),r="function"==typeof Object.create?Object.create(null):{},a={},o=n.settings.springTransform||at;
// Initialize physical objects according to what we have in the graph:
e.forEachNode(function(e){c(e.id)}),e.forEachLink(d),e.on("changed",s),n.on("stable",f);var i={
/**
     * Performs one step of iterative layout algorithm
     */
step:function(){return n.step()},
/**
     * For a given `nodeId` returns position
     */
getNodePosition:function(e){return p(e).pos},
/**
     * Sets position of a node to a given coordinates
     * @param {string} nodeId node identifier
     * @param {number} x position of a node
     * @param {number} y position of a node
     * @param {number=} z position of node (only if applicable to body)
     */
setNodePosition:function(e){var t=p(e);t.setPosition.apply(t,Array.prototype.slice.call(arguments,1))},
/**
     * @returns {Object} Link position by link id
     * @returns {Object.from} {x, y} coordinates of link start
     * @returns {Object.to} {x, y} coordinates of link end
     */
getLinkPosition:function(e){var t=a[e];if(t)return{from:t.from.pos,to:t.to.pos}},
/**
     * @returns {Object} area required to fit in the graph. Object contains
     * `x1`, `y1` - top left coordinates
     * `x2`, `y2` - bottom right coordinates
     */
getGraphRect:function(){return n.getBBox()},
/*
     * Requests layout algorithm to pin/unpin node to its current position
     * Pinned nodes should not be affected by layout algorithm and always
     * remain at their position
     */
pinNode:function(e,t){var n=p(e.id);n.isPinned=!!t},
/**
     * Checks whether given graph's node is currently pinned
     */
isNodePinned:function(e){return p(e.id).isPinned},
/**
     * Request to release all resources
     */
dispose:function(){e.off("changed",s),n.off("stable",f)},
/**
     * Gets physical body for a given node id. If node is not found undefined
     * value is returned.
     */
getBody:function(e){return r[e]},
/**
     * Gets spring for a given edge.
     *
     * @param {string} linkId link identifer. If two arguments are passed then
     * this argument is treated as formNodeId
     * @param {string=} toId when defined this parameter denotes head of the link
     * and first argument is trated as tail of the link (fromId)
     */
getSpring:function(t,n){var r;if(void 0===n)
// assume fromId as a linkId:
r="object"!=typeof t?t:t.id;else{
// toId is defined, should grab link:
var o=e.hasLink(t,n);if(!o)return;r=o.id}return a[r]},
/**
     * [Read only] Gets current physics simulator
     */
simulator:n};return ce(i),i;function f(e){i.fire("stable",e)}function s(e){for(var t=0;t<e.length;++t){var n=e[t];"add"===n.changeType?(n.node&&c(n.node.id),n.link&&d(n.link)):"remove"===n.changeType&&(n.node&&u(n.node),n.link&&h(n.link))}}function c(t){var a=r[t];if(!a){var o=e.getNode(t);if(!o)throw new Error("initBody() was called with unknown node id");var i=o.position;if(!i){var f=function(e){
// TODO: Could probably be done better on memory
var t=[];if(!e.links)return t;for(var n=Math.min(e.links.length,2),a=0;a<n;++a){var o=e.links[a],i=o.fromId!==e.id?r[o.fromId]:r[o.toId];i&&i.pos&&t.push(i)}return t}(o);i=n.getBestNewBodyPosition(f)}a=n.addBodyAt(i),r[t]=a,l(t),(s=o)&&(s.isPinned||s.data&&s.data.isPinned)&&(a.isPinned=!0)}
/**
   * Checks whether graph node has in its settings pinned attribute,
   * which means layout algorithm cannot move it. Node can be preconfigured
   * as pinned, if it has "isPinned" attribute, or when node.data has it.
   *
   * @param {Object} node a graph node to check
   * @return {Boolean} true if node should be treated as pinned; false otherwise.
   */
var s}function u(e){var t=e.id,a=r[t];a&&(r[t]=null,delete r[t],n.removeBody(a))}function d(e){l(e.fromId),l(e.toId);var t=r[e.fromId],i=r[e.toId],f=n.addSpring(t,i,e.length);o(e,f),a[e.id]=f}function h(t){var r=a[t.id];if(r){var o=e.getNode(t.fromId),i=e.getNode(t.toId);o&&l(o.id),i&&l(i.id),delete a[t.id],n.removeSpring(r)}}function l(t){var n=r[t];n.mass=
/**
   * Calculates mass of a body, which corresponds to node with given id.
   *
   * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated
   * @returns {Number} recommended mass of the body;
   */
function(t){var n=e.getLinks(t);return n?1+n.length/3:1}(t)}function p(e){var t=r[e];return t||(c(e),t=r[e]),t}},rt=tt;function at(){}nt.simulator=rt;
/**
 * Internal data structure to represent 3D QuadTree node
 */
var ot=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// Behind Z median:
// 0 | 1
// -----
// 2 | 3
// In front of Z median:
// 4 | 5
// -----
// 6 | 7
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,this.quad4=null,this.quad5=null,this.quad6=null,this.quad7=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,this.massZ=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0,this.front=0,this.back=0},it=ft;
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function ft(){this.stack=[],this.popIdx=0}ft.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressure: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new function(e,t){this.node=e,// QuadTree node
this.body=t}(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var st=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y),a=Math.abs(e.z-t.z);return n<1e-8&&r<1e-8&&a<1e-8},ct=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=me.random(1984),n=ot,r=it,a=st,o=e.gravity,i=[],f=new r,s=e.theta,c=[],u=0,d=function(){
// To avoid pressure on GC we reuse nodes.
var e=c[u];return e?(e.quad0=null,e.quad4=null,e.quad1=null,e.quad5=null,e.quad2=null,e.quad6=null,e.quad3=null,e.quad7=null,e.body=null,e.mass=e.massX=e.massY=e.massZ=0,e.left=e.right=e.top=e.bottom=e.front=e.back=0):(e=new n,c[u]=e),++u,e},h=d(),
// Inserts body to the tree
l=function(e){for(f.reset(),f.push(h,e);!f.isEmpty();){var n=f.pop(),r=n.node,o=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var i=r.body;// internal nodes do not carry bodies
if(r.body=null,a(i.pos,o.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var s=3;do{var c=t.nextDouble(),u=(r.right-r.left)*c,l=(r.bottom-r.top)*c,p=(r.front-r.back)*c;i.pos.x=r.left+u,i.pos.y=r.top+l,i.pos.z=r.back+p,s-=1}while(s>0&&a(i.pos,o.pos));if(0===s&&a(i.pos,o.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
f.push(r,i),f.push(r,o)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var b=o.pos.x,y=o.pos.y,g=o.pos.z;r.mass+=o.mass,r.massX+=o.mass*b,r.massY+=o.mass*y,r.massZ+=o.mass*g;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var v=0,// Assume we are in the 0's quad.
m=r.left,x=(r.right+m)/2,w=r.top,_=(r.bottom+w)/2,k=r.back,A=(r.front+k)/2;if(b>x){// somewhere in the eastern part.
v+=1;var N=m;m=x,x+=x-N}if(y>_){// and in south.
v+=2;var M=w;w=_,_+=_-M}if(g>A){// and in frontal part
v+=4;var q=k;A=(k=A)+(k-q)}var z=ut(r,v);z?
// continue searching in this quadrant.
f.push(z,o):(
// The node is internal but this quadrant is not taken. Add subnode to it.
(z=d()).left=m,z.top=w,z.right=x,z.bottom=_,z.back=k,z.front=A,z.body=o,dt(r,v,z))}}};return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,a=Number.MAX_VALUE,o=Number.MIN_VALUE,i=Number.MIN_VALUE,f=Number.MIN_VALUE,s=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
for(t=s;t--;){var c=e[t].pos,p=c.x,b=c.y,y=c.z;p<n&&(n=p),p>o&&(o=p),b<r&&(r=b),b>i&&(i=b),y<a&&(a=y),y>f&&(f=y)}
// Squarify the bounds.
var g=Math.max(o-n,Math.max(i-r,f-a));for(o=n+g,i=r+g,f=a+g,u=0,(h=d()).left=n,h.right=o,h.top=r,h.bottom=i,h.back=a,h.front=f,(t=s-1)>0&&(h.body=e[t]);t--;)l(e[t])},updateBodyForce:function(e){var n,r,a,f,c,u=i,d=0,l=0,p=0,b=1,y=0,g=1;for(u[0]=h;b;){var v=u[y],m=v.body;b-=1,y+=1;var x=m!==e;m&&x?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=m.pos.x-e.pos.x,a=m.pos.y-e.pos.y,f=m.pos.z-e.pos.z,0===(c=Math.sqrt(r*r+a*a+f*f))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=(t.nextDouble()-.5)/50,c=Math.sqrt(r*r+a*a+f*f))
// This is standard gravitation force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
,d+=(n=o*m.mass*e.mass/(c*c*c))*r,l+=n*a,p+=n*f):x&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=v.massX/v.mass-e.pos.x,a=v.massY/v.mass-e.pos.y,f=v.massZ/v.mass-e.pos.z,0===(c=Math.sqrt(r*r+a*a+f*f))&&(
// Sorry about code duplication. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,a=(t.nextDouble()-.5)/50,f=(t.nextDouble()-.5)/50,c=Math.sqrt(r*r+a*a+f*f))
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
,(v.right-v.left)/c<s?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
d+=(n=o*v.mass*e.mass/(c*c*c))*r,l+=n*a,p+=n*f):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
v.quad0&&(u[g]=v.quad0,b+=1,g+=1),v.quad1&&(u[g]=v.quad1,b+=1,g+=1),v.quad2&&(u[g]=v.quad2,b+=1,g+=1),v.quad3&&(u[g]=v.quad3,b+=1,g+=1),v.quad4&&(u[g]=v.quad4,b+=1,g+=1),v.quad5&&(u[g]=v.quad5,b+=1,g+=1),v.quad6&&(u[g]=v.quad6,b+=1,g+=1),v.quad7&&(u[g]=v.quad7,b+=1,g+=1)))}e.force.x+=d,e.force.y+=l,e.force.z+=p},options:function(e){return e?("number"==typeof e.gravity&&(o=e.gravity),"number"==typeof e.theta&&(s=e.theta),this):{gravity:o,theta:s}}}};
/**
 * This is Barnes Hut simulation algorithm for 3d case. Implementation
 * is highly optimized (avoids recusion and gc pressure)
 *
 * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
 *
 * NOTE: This module duplicates a lot of code from 2d case. Primary reason for
 * this is performance. Every time I tried to abstract away vector operations
 * I had negative impact on performance. So in this case I'm scarifying code
 * reuse in favor of speed
 */function ut(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:4===t?e.quad4:5===t?e.quad5:6===t?e.quad6:7===t?e.quad7:null}function dt(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t?e.quad3=n:4===t?e.quad4=n:5===t?e.quad5=n:6===t?e.quad6=n:7===t&&(e.quad7=n)}var ht=function(e,t){var n=me.random(42),r={x1:0,y1:0,z1:0,x2:0,y2:0,z2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,a=Number.MAX_VALUE,o=Number.MAX_VALUE,i=Number.MIN_VALUE,f=Number.MIN_VALUE,s=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var c=e[t];c.isPinned?(c.pos.x=c.prevPos.x,c.pos.y=c.prevPos.y,c.pos.z=c.prevPos.z):(c.prevPos.x=c.pos.x,c.prevPos.y=c.pos.y,c.prevPos.z=c.pos.z),c.pos.x<n&&(n=c.pos.x),c.pos.x>i&&(i=c.pos.x),c.pos.y<a&&(a=c.pos.y),c.pos.y>f&&(f=c.pos.y),c.pos.z<o&&(o=c.pos.z),c.pos.z>s&&(s=c.pos.z)}r.x1=n,r.x2=i,r.y1=a,r.y2=f,r.z1=o,r.z2=s},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0,r.z1=r.z2=0},getBestNewPosition:function(e){var a=r,o=0,i=0,f=0;if(e.length){for(var s=0;s<e.length;++s)o+=e[s].pos.x,i+=e[s].pos.y,f+=e[s].pos.z;o/=e.length,i/=e.length,f/=e.length}else o=(a.x1+a.x2)/2,i=(a.y1+a.y2)/2,f=(a.z1+a.z2)/2;var c=t.springLength;return{x:o+n.next(c)-c/2,y:i+n.next(c)-c/2,z:f+n.next(c)-c/2}}}},lt=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y,t.force.z-=e.dragCoeff*t.velocity.z}};
// let easy access to dragCoeff:
return ye(e=ve(e,{dragCoeff:.02}),t,["dragCoeff"]),t},pt=function(e){var t=ve,n=me.random(42),r={
/**
     * Upsates forces acting on a spring
     */
update:function(t){var r=t.from,a=t.to,o=t.length<0?e.springLength:t.length,i=a.pos.x-r.pos.x,f=a.pos.y-r.pos.y,s=a.pos.z-r.pos.z,c=Math.sqrt(i*i+f*f+s*s);0===c&&(i=(n.nextDouble()-.5)/50,f=(n.nextDouble()-.5)/50,s=(n.nextDouble()-.5)/50,c=Math.sqrt(i*i+f*f+s*s));var u=c-o,d=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*u/c*t.weight;r.force.x+=d*i,r.force.y+=d*f,r.force.z+=d*s,a.force.x-=d*i,a.force.y-=d*f,a.force.z-=d*s}};return ye(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},bt=function(e){return new Ie.Body3d(e)},yt=function(e,t){var n,r=0,a=0,o=0,i=e.length;for(n=0;n<i;++n){var f=e[n],s=t*t/f.mass;f.pos.x=2*f.pos.x-f.prevPos.x+f.force.x*s,f.pos.y=2*f.pos.y-f.prevPos.y+f.force.y*s,f.pos.z=2*f.pos.z-f.prevPos.z+f.force.z*s,r+=Math.abs(f.pos.x-f.prevPos.x),a+=Math.abs(f.pos.y-f.prevPos.y),o+=Math.abs(f.pos.z-f.prevPos.z)}return(r*r+a*a+o*o)/e.length}
/**
 * Performs 3d forces integration, using given timestep. Uses Euler method to solve
 * differential equation (http://en.wikipedia.org/wiki/Euler_method ).
 *
 * @returns {Number} squared distance of total position updates.
 */;
/**
 * Represents 3d drag force, which reduces force value on each step by given
 * coefficient.
 *
 * @param {Object} options for the drag force
 * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
 */var gt=function(e,t){var n,r=0,a=0,o=0,i=0,f=0,s=0,c=e.length;for(n=0;n<c;++n){var u=e[n],d=t/u.mass;u.velocity.x+=d*u.force.x,u.velocity.y+=d*u.force.y,u.velocity.z+=d*u.force.z;var h=u.velocity.x,l=u.velocity.y,p=u.velocity.z,b=Math.sqrt(h*h+l*l+p*p);b>1&&(u.velocity.x=h/b,u.velocity.y=l/b,u.velocity.z=p/b),r=t*u.velocity.x,o=t*u.velocity.y,f=t*u.velocity.z,u.pos.x+=r,u.pos.y+=o,u.pos.z+=f,a+=Math.abs(r),i+=Math.abs(o),s+=Math.abs(f)}return(a*a+i*i+s*s)/e.length}
/**
 * This module provides all required forces to regular ngraph.physics.simulator
 * to make it 3D simulator. Ideally ngraph.physics.simulator should operate
 * with vectors, but on practices that showed performance decrease... Maybe
 * I was doing it wrong, will see if I can refactor/throw away this module.
 */;var vt=mt;mt.get2dLayout=nt;function mt(e,t){return t=ve(t,{createQuadTree:ct,createBounds:ht,createDragForce:lt,createSpringForce:pt,integrator:function(e){if(e&&"verlet"===e.integrator)return yt;return gt}(t),createBody:bt}),mt.get2dLayout(e,t)}var xt="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function wt(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function _t(e,t){return e(t={exports:{}},t.exports),t.exports}var kt=_t(function(e,t){"undefined"!=typeof self&&self,e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){var r,a,o;i=function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.stateInit,n=void 0===t?function(){return{}}:t,r=e.props,f=void 0===r?{}:r,s=e.methods,c=void 0===s?{}:s,u=e.aliases,d=void 0===u?{}:u,h=e.init,l=void 0===h?function(){}:h,p=e.update,b=void 0===p?function(){}:p,y=Object.keys(f).map(function(e){return new i(e,f[e])});return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},n instanceof Function?n():n,{initialised:!1});function r(t){return i(t,e),f(),r}var i=function(e,n){l.call(r,e,t,n),t.initialised=!0},f=(0,a.default)(function(){t.initialised&&b.call(r,t)},1);return y.forEach(function(e){r[e.name]=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e,t){};return function(o){return arguments.length?(t[e]=o,a.call(r,o,t),n&&f(),r):t[e]}}(e.name,e.triggerUpdate,e.onChange)}),Object.keys(c).forEach(function(e){r[e]=function(){for(var n,a=arguments.length,o=Array(a),i=0;i<a;i++)o[i]=arguments[i];return(n=c[e]).call.apply(n,[r,t].concat(o))}}),Object.entries(d).forEach(function(e){var t=o(e,2),n=t[0],a=t[1];return r[n]=r[a]}),r.resetProps=function(){return y.forEach(function(e){r[e.name](e.defaultVal)}),r},r.resetProps(),t._rerender=f,r}};var r,a=(r=n,r&&r.__esModule?r:{default:r}),o=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,a=!1,o=void 0;try{for(var i,f=e[Symbol.iterator]();!(r=(i=f.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{!r&&f.return&&f.return()}finally{if(a)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},i=function e(t,n){var r=n.default,a=void 0===r?null:r,o=n.triggerUpdate,i=void 0===o||o,f=n.onChange,s=void 0===f?function(e,t){}:f;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.defaultVal=a,this.triggerUpdate=i,this.onChange=s};e.exports=t.default},a=[e,t,n(1)],void 0===(o="function"==typeof(r=i)?r.apply(t,a):r)||(e.exports=o);var i},function(e,t){e.exports=function(e,t,n){var r,a,o,i,f;null==t&&(t=100);function s(){var c=Date.now()-i;c<t&&c>=0?r=setTimeout(s,t-c):(r=null,n||(f=e.apply(o,a),o=a=null))}var c=function(){o=this,a=arguments,i=Date.now();var c=n&&!r;return r||(r=setTimeout(s,t)),c&&(f=e.apply(o,a),o=a=null),f};return c.clear=function(){r&&(clearTimeout(r),r=null)},c.flush=function(){r&&(f=e.apply(o,a),o=a=null,clearTimeout(r),r=null)},c}}])}),At=wt(kt),Nt=(kt.Kapsule,_t(function(e){
/*
 * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec
 * 
 * Public Domain. Use, modify and distribute it any way you like. No attribution required.
 *
 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
 *
 * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the
 * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for 
 * Minified.js and should be perfect for embedding. 
 *
 *
 * PinkySwear has just three functions.
 *
 * To create a new promise in pending state, call pinkySwear():
 *         var promise = pinkySwear();
 *
 * The returned object has a Promises/A+ compatible then() implementation:
 *          promise.then(function(value) { alert("Success!"); }, function(value) { alert("Failure!"); });
 *
 *
 * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and
 * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one
 * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: 
 *         promise(true, [42]);
 *
 * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:
 *         promise(true, [6, 6, 6]);
 *         
 * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,
 * false if rejected, and otherwise undefined.
 * 		   var state = promise(); 
 * 
 * https://github.com/timjansen/PinkySwear.js
 */
t=xt,n=function(){var e;function t(e){return"function"==typeof e}function n(e){"undefined"!=typeof setImmediate?setImmediate(e):"undefined"!=typeof process&&process.nextTick?process.nextTick(e):setTimeout(e,0)}return function r(a){var o,i=[],f=[],s=function(e,t){return null==o&&null!=e&&(o=e,i=t,f.length&&n(function(){for(var e=0;e<f.length;e++)f[e]()})),o};// undefined/null = pending, true = fulfilled, false = rejected
return s.then=function(s,c){var u=r(a),d=function(){try{var n=o?s:c;if(t(n)){!function n(r){var a,o=0;try{if(r&&(i=r,"object"==typeof i||t(r))&&t(a=r.then)){if(r===u)throw new TypeError;a.call(r,function(){o++||n.apply(e,arguments)},function(e){o++||u(!1,[e])})}else u(!0,arguments)}catch(e){o++||u(!1,[e])}var i}(n.apply(e,i||[]))}else u(o,i)}catch(e){u(!1,[e])}};return null!=o?n(d):f.push(d),u},a&&(s=a(s)),s}},e.exports?e.exports=n():t.pinkySwear=n();var t,n})),Mt=_t(function(e){
/**
 * @preserve jquery-param (c) 2015 KNOWLEDGECODE | MIT
 */
/*global define */
e.exports=function(e){var t=function(e,t,n){n="function"==typeof n?n():null===n?"":void 0===n?"":n,e[e.length]=encodeURIComponent(t)+"="+encodeURIComponent(n)},n=function(e,r,a){var o,i,f;if("[object Array]"===Object.prototype.toString.call(r))for(o=0,i=r.length;o<i;o++)n(e+"["+("object"==typeof r[o]?o:"")+"]",r[o],a);else if(r&&"[object Object]"===r.toString())for(f in r)r.hasOwnProperty(f)&&n(e?e+"["+f+"]":f,r[f],a,t);else if(e)t(a,e,r);else for(f in r)t(a,f,r[f]);return a};return n("",e,[]).join("&").replace(/%20/g,"+")}}),qt=function(){var e="undefined"!=typeof window?window:self,t=Nt,n=Mt,r={},
// Default response type for XDR in auto mode
a="json",
// Default data type
o="post",
// Variables for limit mechanism
i=null,f=0,s=[],
// Get XMLHttpRequest object
c=e.XMLHttpRequest?function(){return new e.XMLHttpRequest}:function(){return new ActiveXObject("Microsoft.XMLHTTP")},
// Guess XHR version
u=""===c().responseType,d=function(d){
// Prepare
var h=[],l=0,p=[];
// Create a new promise to handle all requests
return t(function(b){
// Basic request method
var y=-1,g=function(d){return function(g,v,m,x){var w=++y;return++l,h.push(function(d,h,l,p,b){
// Format
d=d.toUpperCase(),l=void 0===l?null:l,p=p||{};for(var y in r)if(!(y in p))if("object"==typeof r[y]&&"object"==typeof p[y])for(var g in r[y])p[y][g]=r[y][g];else p[y]=r[y];
// Define variables
var v,m,x,w,_,k=!1,A=!1,N=!1,M=0,q={},z={text:"*/*",xml:"text/xml",json:"application/json",post:"application/x-www-form-urlencoded",document:"text/html"},E={text:"*/*",xml:"application/xml; q=1.0, text/xml; q=0.8, */*; q=0.1",json:"application/json; q=1.0, text/*; q=0.8, */*; q=0.1"},T=!1,
// Create the promise
P=t(function(t){return t.abort=function(){N||(m&&4!=m.readyState&&// https://stackoverflow.com/questions/7287706/ie-9-javascript-error-c00c023f
m.abort(),T&&(--f,T=!1),N=!0)},t.send=function(){
// Prevent further send() calls
if(!T)
// Reached request limit, get out!
if(f!=i)
// Verify if the request has not been previously aborted
if(N)s.length&&s.shift().send();else{
// Set headers
if(
// The sending is running
++f,T=!0,
// Get XHR object
m=c(),v&&("withCredentials"in m||!e.XDomainRequest||(m=new XDomainRequest,// CORS with IE8/9
A=!0,"GET"!=d&&"POST"!=d&&(d="POST")))
// Open connection
,A?m.open(d,h):(m.open(d,h,p.async,p.user,p.password),u&&p.async&&(m.withCredentials=p.withCredentials)),!A)for(var n in q)q[n]&&m.setRequestHeader(n,q[n]);
// Verify if the response type is supported by the current browser
if(u&&"auto"!=p.responseType)try{m.responseType=p.responseType,k=m.responseType==p.responseType}catch(e){}
// Plug response handler
u||A?(m.onload=I,m.onerror=L,
// http://cypressnorth.com/programming/internet-explorer-aborting-ajax-requests-fixed/
A&&(m.onprogress=function(){})):m.onreadystatechange=function(){4==m.readyState&&I()}
// Plug timeout
,p.async?"timeout"in m?(m.timeout=p.timeout,m.ontimeout=O):x=setTimeout(O,p.timeout):A&&(m.ontimeout=function(){})
// Override mime type to ensure the response is well parsed
,"auto"!=p.responseType&&"overrideMimeType"in m&&m.overrideMimeType(z[p.responseType])
// Run 'before' callback
,b&&b(m)
// Send request
,A?
// https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest
setTimeout(function(){m.send("GET"!=d?l:null)},0):m.send("GET"!=d?l:null)}else s.push(t)},t}),
// Handle the response
I=function(){var t;
// Stop sending state
// Verify if the request has not been previously aborted
if(T=!1,clearTimeout(x),
// Launch next stacked request
s.length&&s.shift().send(),!N){
// Decrease the number of requests
--f;
// Handle response
try{
// Process response
if(k){if("response"in m&&null===m.response)throw"The request response is empty";_=m.response}else{if("auto"==(
// Guess response type
t=p.responseType))if(A)t=a;else{var n=m.getResponseHeader("Content-Type")||"";t=n.indexOf(z.json)>-1?"json":n.indexOf(z.xml)>-1?"xml":"text"}
// Handle response type
switch(t){case"json":if(m.responseText.length)try{_="JSON"in e?JSON.parse(m.responseText):new Function("return ("+m.responseText+")")()}catch(e){throw"Error while parsing JSON body : "+e}break;case"xml":
// Based on jQuery's parseXML() function
try{
// Standard
e.DOMParser?_=(new DOMParser).parseFromString(m.responseText,"text/xml"):((_=new ActiveXObject("Microsoft.XMLDOM")).async="false",_.loadXML(m.responseText))}catch(e){_=void 0}if(!_||!_.documentElement||_.getElementsByTagName("parsererror").length)throw"Invalid XML";break;default:_=m.responseText}}
// Late status code verification to allow passing data when, per example, a 409 is returned
// --- https://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
if("status"in m&&!/^2|1223/.test(m.status))throw m.status+" ("+m.statusText+")";
// Fulfilled
P(!0,[m,_])}catch(e){
// Rejected
P(!1,[e,m,_])}}},
// Handle errors
L=function(e){N||(e="string"==typeof e?e:"Connection aborted",P.abort(),P(!1,[new Error(e),m,null]))},
// Handle timeouts
O=function(){N||(p.attempts&&++M==p.attempts?L("Timeout ("+h+")"):(m.abort(),T=!1,P.send()))};
// Normalize options
if(p.async=!("async"in p&&!p.async),p.cache="cache"in p&&!!p.cache,p.dataType="dataType"in p?p.dataType.toLowerCase():o,p.responseType="responseType"in p?p.responseType.toLowerCase():"auto",p.user=p.user||"",p.password=p.password||"",p.withCredentials=!!p.withCredentials,p.timeout="timeout"in p?parseInt(p.timeout,10):3e4,p.attempts="attempts"in p?parseInt(p.attempts,10):1,
// Guess if we're dealing with a cross-origin request
w=h.match(/\/\/(.+?)\//),v=w&&!!w[1]&&w[1]!=location.host,
// Prepare data
"ArrayBuffer"in e&&l instanceof ArrayBuffer?p.dataType="arraybuffer":"Blob"in e&&l instanceof Blob?p.dataType="blob":"Document"in e&&l instanceof Document?p.dataType="document":"FormData"in e&&l instanceof FormData&&(p.dataType="formdata"),null!==l)switch(p.dataType){case"json":l=JSON.stringify(l);break;case"post":case"queryString":l=n(l)}
// Prepare headers
if(p.headers){var C=function(e,t,n){return t+n.toUpperCase()};for(w in p.headers)q[w.replace(/(^|-)([^-])/g,C)]=p.headers[w]}
// Return promise
return"Content-Type"in q||"GET"==d||p.dataType in z&&z[p.dataType]&&(q["Content-Type"]=z[p.dataType]),q.Accept||(q.Accept=p.responseType in E?E[p.responseType]:"*/*"),v||"X-Requested-With"in q||(// (that header breaks in legacy browsers with CORS)
q["X-Requested-With"]="XMLHttpRequest"),p.cache||"Cache-Control"in q||(q["Cache-Control"]="no-cache")
// Prepare URL
,"GET"!=d&&"queryString"!=p.dataType||!l||"string"!=typeof l||(h+=(/\?/.test(h)?"&":"?")+l)
// Start the request
,p.async&&P.send(),P}(d,b.base+g,v,m,x).then(function(e,t){p[w]=arguments,--l||b(!0,1==p.length?p[0]:[p])},function(){b(!1,arguments)})),b}};
// Define external API
b.get=g("GET"),b.post=g("POST"),b.put=g("PUT"),b.delete=g("DELETE"),b.catch=function(e){return b.then(null,e)},b.complete=function(e){var t=function(){e();// otherwise arguments will be passed to the callback
};return b.then(t,t)},b.map=function(e,t,n,r,a){return g(e.toUpperCase()).call(this,t,n,r,a)};
// Populate methods from external object
for(var v in d)v in b||(b[v]=d[v]);
// Set last methods
return b.send=function(){for(var e=0,t=h.length;e<t;++e)h[e].send();return b},b.abort=function(){for(var e=0,t=h.length;e<t;++e)h[e].abort();return b},b})},h={base:"",get:function(){return d(h).get.apply(this,arguments)},post:function(){return d(h).post.apply(this,arguments)},put:function(){return d(h).put.apply(this,arguments)},delete:function(){return d(h).delete.apply(this,arguments)},map:function(){return d(h).map.apply(this,arguments)},xhr2:u,limit:function(e){return i=e,h},setDefaultOptions:function(e){return r=e,h},setDefaultXdrResponseType:function(e){return a=e.toLowerCase(),h},setDefaultDataType:function(e){return o=e.toLowerCase(),h},getOpenRequests:function(){return f}};
// Define external qwest object
return h}(),zt=_t(function(e,t){e.exports=function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){var r,a,o;a=[e,t],void 0!==(o="function"==typeof(r=function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Function?e:"string"==typeof e?function(t){return t[e]}:function(t){return e}},e.exports=t.default})?r.apply(t,a):r)&&(e.exports=o)}])}),Et=wt(zt);zt.accessorFn;function Tt(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}Tt("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Tt("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");var Pt=Tt("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");Tt("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Tt("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Tt("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Tt("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Tt("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");function It(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function Lt(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function Ot(){}var Ct="\\s*([+-]?\\d+)\\s*",St="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Dt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",jt=/^#([0-9a-f]{3})$/,Bt=/^#([0-9a-f]{6})$/,Rt=new RegExp("^rgb\\("+[Ct,Ct,Ct]+"\\)$"),Ft=new RegExp("^rgb\\("+[Dt,Dt,Dt]+"\\)$"),Ut=new RegExp("^rgba\\("+[Ct,Ct,Ct,St]+"\\)$"),Ht=new RegExp("^rgba\\("+[Dt,Dt,Dt,St]+"\\)$"),Xt=new RegExp("^hsl\\("+[St,Dt,Dt]+"\\)$"),Vt=new RegExp("^hsla\\("+[St,Dt,Dt,St]+"\\)$"),$t={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};It(Ot,Gt,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}});function Gt(e){var t;return e=(e+"").trim().toLowerCase(),(t=jt.exec(e))?new Zt((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):// #f00
(t=Bt.exec(e))?Yt(parseInt(t[1],16))// #ff0000
:(t=Rt.exec(e))?new Zt(t[1],t[2],t[3],1)// rgb(255, 0, 0)
:(t=Ft.exec(e))?new Zt(255*t[1]/100,255*t[2]/100,255*t[3]/100,1)// rgb(100%, 0%, 0%)
:(t=Ut.exec(e))?Jt(t[1],t[2],t[3],t[4])// rgba(255, 0, 0, 1)
:(t=Ht.exec(e))?Jt(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4])// rgb(100%, 0%, 0%, 1)
:(t=Xt.exec(e))?Kt(t[1],t[2]/100,t[3]/100,1)// hsl(120, 50%, 50%)
:(t=Vt.exec(e))?Kt(t[1],t[2]/100,t[3]/100,t[4])// hsla(120, 50%, 50%, 1)
:$t.hasOwnProperty(e)?Yt($t[e]):"transparent"===e?new Zt(NaN,NaN,NaN,0):null}function Yt(e){return new Zt(e>>16&255,e>>8&255,255&e,1)}function Jt(e,t,n,r){return r<=0&&(e=t=n=NaN),new Zt(e,t,n,r)}function Qt(e){return e instanceof Ot||(e=Gt(e)),e?new Zt((e=e.rgb()).r,e.g,e.b,e.opacity):new Zt}function Wt(e,t,n,r){return 1===arguments.length?Qt(e):new Zt(e,t,n,null==r?1:r)}function Zt(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}It(Zt,Wt,Lt(Ot,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Zt(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Zt(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}}));function Kt(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new en(e,t,n,r)}function en(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}It(en,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof en)return new en(e.h,e.s,e.l,e.opacity);if(e instanceof Ot||(e=Gt(e)),!e)return new en;if(e instanceof en)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,a=Math.min(t,n,r),o=Math.max(t,n,r),i=NaN,f=o-a,s=(o+a)/2;return f?(i=t===o?(n-r)/f+6*(n<r):n===o?(r-t)/f+2:(t-n)/f+4,f/=s<.5?o+a:2-o-a,i*=60):f=s>0&&s<1?0:i,new en(i,f,s,e.opacity)}(e):new en(e,t,n,null==r?1:r)},Lt(Ot,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new en(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new en(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,a=2*n-r;return new Zt(tn(e>=240?e-240:e+120,a,r),tn(e,a,r),tn(e<120?e+240:e-120,a,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));
/* From FvD 13.37, CSS Color Module Level 3 */
function tn(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}var nn=Math.PI/180,rn=180/Math.PI,an=.95047,on=1,fn=1.08883,sn=4/29,cn=6/29,un=3*cn*cn,dn=cn*cn*cn;function hn(e){if(e instanceof ln)return new ln(e.l,e.a,e.b,e.opacity);if(e instanceof vn){var t=e.h*nn;return new ln(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof Zt||(e=Qt(e));var n=gn(e.r),r=gn(e.g),a=gn(e.b),o=pn((.4124564*n+.3575761*r+.1804375*a)/an),i=pn((.2126729*n+.7151522*r+.072175*a)/on);return new ln(116*i-16,500*(o-i),200*(i-pn((.0193339*n+.119192*r+.9503041*a)/fn)),e.opacity)}function ln(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}It(ln,function(e,t,n,r){return 1===arguments.length?hn(e):new ln(e,t,n,null==r?1:r)},Lt(Ot,{brighter:function(e){return new ln(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new ln(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return e=on*bn(e),new Zt(yn(3.2404542*(t=an*bn(t))-1.5371385*e-.4985314*(n=fn*bn(n))),// D65 -> sRGB
yn(-.969266*t+1.8760108*e+.041556*n),yn(.0556434*t-.2040259*e+1.0572252*n),this.opacity)}}));function pn(e){return e>dn?Math.pow(e,1/3):e/un+sn}function bn(e){return e>cn?e*e*e:un*(e-sn)}function yn(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function gn(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function vn(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}It(vn,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof vn)return new vn(e.h,e.c,e.l,e.opacity);e instanceof ln||(e=hn(e));var t=Math.atan2(e.b,e.a)*rn;return new vn(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}(e):new vn(e,t,n,null==r?1:r)},Lt(Ot,{brighter:function(e){return new vn(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new vn(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return hn(this).rgb()}}));var mn=-.29227,xn=-.90649,wn=1.97294,_n=wn*xn,kn=1.78277*wn,An=1.78277*mn- -.14861*xn;function Nn(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}It(Nn,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof Nn)return new Nn(e.h,e.s,e.l,e.opacity);e instanceof Zt||(e=Qt(e));var t=e.r/255,n=e.g/255,r=e.b/255,a=(An*r+_n*t-kn*n)/(An+_n-kn),o=r-a,i=(wn*(n-a)-mn*o)/xn,f=Math.sqrt(i*i+o*o)/(wn*a*(1-a)),// NaN if l=0 or l=1
s=f?Math.atan2(i,o)*rn-120:NaN;return new Nn(s<0?s+360:s,f,a,e.opacity)}(e):new Nn(e,t,n,null==r?1:r)},Lt(Ot,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Nn(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Nn(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*nn,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),a=Math.sin(e);return new Zt(255*(t+n*(-.14861*r+1.78277*a)),255*(t+n*(mn*r+xn*a)),255*(t+n*(wn*r)),this.opacity)}}));var Mn,qn=(Mn=function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),a=e[r],o=e[r+1],i=r>0?e[r-1]:2*a-o,f=r<t-1?e[r+2]:2*o-a;return function(e,t,n,r,a){var o=e*e,i=o*e;return((1-3*e+3*o-i)*t+(4-6*o+3*i)*n+(1+3*e+3*o-3*i)*r+i*a)/6}((n-r/t)*t,i,a,o,f)}},function(e){var t,n,r=e.length,a=new Array(r),o=new Array(r),i=new Array(r);for(t=0;t<r;++t)n=Wt(e[t]),a[t]=n.r||0,o[t]=n.g||0,i[t]=n.b||0;return a=Mn(a),o=Mn(o),i=Mn(i),n.opacity=1,function(e){return n.r=a(e),n.g=o(e),n.b=i(e),n+""}});Math.PI,Math.SQRT2;function zn(e){return qn(e[e.length-1])}zn(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Tt));zn(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Tt));zn(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Tt));zn(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Tt));zn(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Tt));zn(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Tt));zn(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Tt));zn(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Tt));zn(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Tt));zn(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Tt));zn(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Tt));zn(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Tt));zn(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Tt));zn(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Tt));zn(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Tt));zn(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Tt));zn(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Tt));zn(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Tt));zn(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Tt));zn(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Tt));zn(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Tt));zn(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Tt));zn(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Tt));zn(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Tt));zn(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Tt));zn(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Tt));zn(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Tt));var En=_t(function(e){
// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License
!function(t){var n=/^\s+/,r=/\s+$/,a=0,o=t.round,i=t.min,f=t.max,s=t.random;function c(e,s){
// If input is already a tinycolor, return itself
if(e=e||"",s=s||{},e instanceof c)return e;
// If we are called as a function, call using new instead
if(!(this instanceof c))return new c(e,s);var u=
// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function(e){var a={r:0,g:0,b:0},o=1,s=null,c=null,u=null,d=!1,h=!1;"string"==typeof e&&(e=
// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function(e){e=e.replace(n,"").replace(r,"").toLowerCase();var t=!1;if(q[e])e=q[e],t=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};
// Try to match string input using regular expressions.
// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
// Just return an object and let the conversion functions handle that.
// This way the result will be the same whether the tinycolor is initialized with string or object.
var a;if(a=D.rgb.exec(e))return{r:a[1],g:a[2],b:a[3]};if(a=D.rgba.exec(e))return{r:a[1],g:a[2],b:a[3],a:a[4]};if(a=D.hsl.exec(e))return{h:a[1],s:a[2],l:a[3]};if(a=D.hsla.exec(e))return{h:a[1],s:a[2],l:a[3],a:a[4]};if(a=D.hsv.exec(e))return{h:a[1],s:a[2],v:a[3]};if(a=D.hsva.exec(e))return{h:a[1],s:a[2],v:a[3],a:a[4]};if(a=D.hex8.exec(e))return{r:I(a[1]),g:I(a[2]),b:I(a[3]),a:S(a[4]),format:t?"name":"hex8"};if(a=D.hex6.exec(e))return{r:I(a[1]),g:I(a[2]),b:I(a[3]),format:t?"name":"hex"};if(a=D.hex4.exec(e))return{r:I(a[1]+""+a[1]),g:I(a[2]+""+a[2]),b:I(a[3]+""+a[3]),a:S(a[4]+""+a[4]),format:t?"name":"hex8"};if(a=D.hex3.exec(e))return{r:I(a[1]+""+a[1]),g:I(a[2]+""+a[2]),b:I(a[3]+""+a[3]),format:t?"name":"hex"};return!1}(e));"object"==typeof e&&(j(e.r)&&j(e.g)&&j(e.b)?(l=e.r,p=e.g,b=e.b,a={r:255*T(l,255),g:255*T(p,255),b:255*T(b,255)},d=!0,h="%"===String(e.r).substr(-1)?"prgb":"rgb"):j(e.h)&&j(e.s)&&j(e.v)?(s=O(e.s),c=O(e.v),a=
// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function(e,n,r){e=6*T(e,360),n=T(n,100),r=T(r,100);var a=t.floor(e),o=e-a,i=r*(1-n),f=r*(1-o*n),s=r*(1-(1-o)*n),c=a%6;return{r:255*[r,f,i,i,s,r][c],g:255*[s,r,r,f,i,i][c],b:255*[i,i,s,r,r,f][c]}}
// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
(e.h,s,c),d=!0,h="hsv"):j(e.h)&&j(e.s)&&j(e.l)&&(s=O(e.s),u=O(e.l),a=
// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function(e,t,n){var r,a,o;e=T(e,360),t=T(t,100),n=T(n,100);function i(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(0===t)r=a=o=n;// achromatic
else{var f=n<.5?n*(1+t):n+t-n*t,s=2*n-f;r=i(s,f,e+1/3),a=i(s,f,e),o=i(s,f,e-1/3)}return{r:255*r,g:255*a,b:255*o}}
// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
(e.h,s,u),d=!0,h="hsl"),e.hasOwnProperty("a")&&(o=e.a));
// Conversion Functions
// --------------------
// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
var l,p,b;
// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
return o=E(o),{ok:d,format:e.format||h,r:i(255,f(a.r,0)),g:i(255,f(a.g,0)),b:i(255,f(a.b,0)),a:o}}(e);this._originalInput=e,this._r=u.r,this._g=u.g,this._b=u.b,this._a=u.a,this._roundA=o(100*this._a)/100,this._format=s.format||u.format,this._gradientType=s.gradientType,
// Don't let the range of [0,255] come back in [0,1].
// Potentially lose a little bit of precision here, but will fix issues where
// .5 gets interpreted as half of the total, instead of half of 1
// If it was supposed to be 128, this was already taken care of by `inputToRgb`
this._r<1&&(this._r=o(this._r)),this._g<1&&(this._g=o(this._g)),this._b<1&&(this._b=o(this._b)),this._ok=u.ok,this._tc_id=a++}c.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){
//http://www.w3.org/TR/AERT#color-contrast
var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){
//http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
var e,n,r,a=this.toRgb();return e=a.r/255,n=a.g/255,r=a.b/255,.2126*(e<=.03928?e/12.92:t.pow((e+.055)/1.055,2.4))+.7152*(n<=.03928?n/12.92:t.pow((n+.055)/1.055,2.4))+.0722*(r<=.03928?r/12.92:t.pow((r+.055)/1.055,2.4))},setAlpha:function(e){return this._a=E(e),this._roundA=o(100*this._a)/100,this},toHsv:function(){var e=d(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=d(this._r,this._g,this._b),t=o(360*e.h),n=o(100*e.s),r=o(100*e.v);return 1==this._a?"hsv("+t+", "+n+"%, "+r+"%)":"hsva("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=u(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=u(this._r,this._g,this._b),t=o(360*e.h),n=o(100*e.s),r=o(100*e.l);return 1==this._a?"hsl("+t+", "+n+"%, "+r+"%)":"hsla("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return h(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){
// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
return function(e,t,n,r,a){var i=[L(o(e).toString(16)),L(o(t).toString(16)),L(o(n).toString(16)),L(C(r))];
// Return a 4 character hex if possible
if(a&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)&&i[3].charAt(0)==i[3].charAt(1))return i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0)+i[3].charAt(0);return i.join("")}
// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:o(this._r),g:o(this._g),b:o(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+o(this._r)+", "+o(this._g)+", "+o(this._b)+")":"rgba("+o(this._r)+", "+o(this._g)+", "+o(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:o(100*T(this._r,255))+"%",g:o(100*T(this._g,255))+"%",b:o(100*T(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+o(100*T(this._r,255))+"%, "+o(100*T(this._g,255))+"%, "+o(100*T(this._b,255))+"%)":"rgba("+o(100*T(this._r,255))+"%, "+o(100*T(this._g,255))+"%, "+o(100*T(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(z[h(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+l(this._r,this._g,this._b,this._a),n=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var a=c(e);n="#"+l(a._r,a._g,a._b,a._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,r=this._a<1&&this._a>=0;return t||!r||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex4"===e&&(n=this.toHex8String(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString()):
// Special case for "transparent", all other non-alpha formats
// will return rgba when there is transparency.
"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return c(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(g,arguments)},brighten:function(){return this._applyModification(v,arguments)},darken:function(){return this._applyModification(m,arguments)},desaturate:function(){return this._applyModification(p,arguments)},saturate:function(){return this._applyModification(b,arguments)},greyscale:function(){return this._applyModification(y,arguments)},spin:function(){return this._applyModification(x,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(N,arguments)},complement:function(){return this._applyCombination(w,arguments)},monochromatic:function(){return this._applyCombination(M,arguments)},splitcomplement:function(){return this._applyCombination(A,arguments)},triad:function(){return this._applyCombination(_,arguments)},tetrad:function(){return this._applyCombination(k,arguments)}},
// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
c.fromRatio=function(e,t){if("object"==typeof e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]="a"===r?e[r]:O(e[r]));e=n}return c(e,t)};function u(e,t,n){e=T(e,255),t=T(t,255),n=T(n,255);var r,a,o=f(e,t,n),s=i(e,t,n),c=(o+s)/2;if(o==s)r=a=0;// achromatic
else{var u=o-s;switch(a=c>.5?u/(2-o-s):u/(o+s),o){case e:r=(t-n)/u+(t<n?6:0);break;case t:r=(n-e)/u+2;break;case n:r=(e-t)/u+4}r/=6}return{h:r,s:a,l:c}}function d(e,t,n){e=T(e,255),t=T(t,255),n=T(n,255);var r,a,o=f(e,t,n),s=i(e,t,n),c=o,u=o-s;if(a=0===o?0:u/o,o==s)r=0;// achromatic
else{switch(o){case e:r=(t-n)/u+(t<n?6:0);break;case t:r=(n-e)/u+2;break;case n:r=(e-t)/u+4}r/=6}return{h:r,s:a,v:c}}function h(e,t,n,r){var a=[L(o(e).toString(16)),L(o(t).toString(16)),L(o(n).toString(16))];
// Return a 3 character hex if possible
return r&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0):a.join("")}function l(e,t,n,r){return[L(C(r)),L(o(e).toString(16)),L(o(t).toString(16)),L(o(n).toString(16))].join("")}
// `equals`
// Can be called with any tinycolor input
c.equals=function(e,t){return!(!e||!t)&&c(e).toRgbString()==c(t).toRgbString()},c.random=function(){return c.fromRatio({r:s(),g:s(),b:s()})};
// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>
function p(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.s-=t/100,n.s=P(n.s),c(n)}function b(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.s+=t/100,n.s=P(n.s),c(n)}function y(e){return c(e).desaturate(100)}function g(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.l+=t/100,n.l=P(n.l),c(n)}function v(e,t){t=0===t?0:t||10;var n=c(e).toRgb();return n.r=f(0,i(255,n.r-o(-t/100*255))),n.g=f(0,i(255,n.g-o(-t/100*255))),n.b=f(0,i(255,n.b-o(-t/100*255))),c(n)}function m(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.l-=t/100,n.l=P(n.l),c(n)}
// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function x(e,t){var n=c(e).toHsl(),r=(n.h+t)%360;return n.h=r<0?360+r:r,c(n)}
// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>
function w(e){var t=c(e).toHsl();return t.h=(t.h+180)%360,c(t)}function _(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+120)%360,s:t.s,l:t.l}),c({h:(n+240)%360,s:t.s,l:t.l})]}function k(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+90)%360,s:t.s,l:t.l}),c({h:(n+180)%360,s:t.s,l:t.l}),c({h:(n+270)%360,s:t.s,l:t.l})]}function A(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+72)%360,s:t.s,l:t.l}),c({h:(n+216)%360,s:t.s,l:t.l})]}function N(e,t,n){t=t||6,n=n||30;var r=c(e).toHsl(),a=360/n,o=[c(e)];for(r.h=(r.h-(a*t>>1)+720)%360;--t;)r.h=(r.h+a)%360,o.push(c(r));return o}function M(e,t){t=t||6;for(var n=c(e).toHsv(),r=n.h,a=n.s,o=n.v,i=[],f=1/t;t--;)i.push(c({h:r,s:a,v:o})),o=(o+f)%1;return i}
// Utility Functions
// ---------------------
c.mix=function(e,t,n){n=0===n?0:n||50;var r=c(e).toRgb(),a=c(t).toRgb(),o=n/100;return c({r:(a.r-r.r)*o+r.r,g:(a.g-r.g)*o+r.g,b:(a.b-r.b)*o+r.b,a:(a.a-r.a)*o+r.a})},
// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
c.readability=function(e,n){var r=c(e),a=c(n);return(t.max(r.getLuminance(),a.getLuminance())+.05)/(t.min(r.getLuminance(),a.getLuminance())+.05)},
// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
c.isReadable=function(e,t,n){var r,a,o=c.readability(e,t);switch(a=!1,(r=function(e){
// return valid WCAG2 parms for isReadable.
// If input parms are invalid, return {"level":"AA", "size":"small"}
var t,n;t=((e=e||{level:"AA",size:"small"}).level||"AA").toUpperCase(),n=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA");"small"!==n&&"large"!==n&&(n="small");return{level:t,size:n}}
// Node: Export function
(n)).level+r.size){case"AAsmall":case"AAAlarge":a=o>=4.5;break;case"AAlarge":a=o>=3;break;case"AAAsmall":a=o>=7}return a},
// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
c.mostReadable=function(e,t,n){var r,a,o,i,f=null,s=0;a=(n=n||{}).includeFallbackColors,o=n.level,i=n.size;for(var u=0;u<t.length;u++)(r=c.readability(e,t[u]))>s&&(s=r,f=c(t[u]));return c.isReadable(e,f,{level:o,size:i})||!a?f:(n.includeFallbackColors=!1,c.mostReadable(e,["#fff","#000"],n))};
// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var q=c.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},z=c.hexNames=
// Utilities
// ---------
// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}
// Return a valid alpha value [0,1] with all invalid values being set to 1
(q);
// Make it easy to access colors via `hexNames[hex]`
function E(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}
// Take input from [0, n] and return it as [0, 1]
function T(e,n){"string"==typeof(r=e)&&-1!=r.indexOf(".")&&1===parseFloat(r)&&(e="100%");
// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
var r,a,o=(a=e,"string"==typeof a&&-1!=a.indexOf("%"));
// Check to see if string passed in is a percentage
// Handle floating point rounding errors
return e=i(n,f(0,parseFloat(e))),
// Automatically convert percentage into number
o&&(e=parseInt(e*n,10)/100),t.abs(e-n)<1e-6?1:e%n/parseFloat(n)
// Convert into [0, 1] range if it isn't already;
}
// Force a number between 0 and 1
function P(e){return i(1,f(0,e))}
// Parse a base-16 hex value into a base-10 integer
function I(e){return parseInt(e,16)}
// Force a hex value to have 2 characters
function L(e){return 1==e.length?"0"+e:""+e}
// Replace a decimal with it's percentage value
function O(e){return e<=1&&(e=100*e+"%"),e}
// Converts a decimal to a hex value
function C(e){return t.round(255*parseFloat(e)).toString(16)}
// Converts a hex value to a decimal
function S(e){return I(e)/255}var D=function(){
// <http://www.w3.org/TR/css3-values/#integers>
var e="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)",t="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?",n="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?";
// <http://www.w3.org/TR/css3-values/#number-value>
return{CSS_UNIT:new RegExp(e),rgb:new RegExp("rgb"+t),rgba:new RegExp("rgba"+n),hsl:new RegExp("hsl"+t),hsla:new RegExp("hsla"+n),hsv:new RegExp("hsv"+t),hsva:new RegExp("hsva"+n),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();
// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function j(e){return!!D.CSS_UNIT.exec(e)}e.exports?e.exports=c:window.tinycolor=c}(Math)}),Tn=function(e){return isNaN(e)?parseInt(En(e).toHex(),16):e};
// Autoset attribute colorField by colorByAccessor property
// If an object has already a color, don't set it
// Objects can be nodes or links
function Pn(e,t,n){if(t&&"string"==typeof n){var r=Pt,a=e.filter(function(e){return!e[n]}),o={};// Paired color set from color brewer
a.forEach(function(e){o[t(e)]=null}),Object.keys(o).forEach(function(e,t){o[e]=t}),a.forEach(function(e){e[n]=r[o[t(e)]%r.length]})}}var In=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{SphereGeometry:e.SphereGeometry,BufferGeometry:e.BufferGeometry,BufferAttribute:e.BufferAttribute,Mesh:e.Mesh,MeshLambertMaterial:e.MeshLambertMaterial,Line:Line,LineBasicMaterial:LineBasicMaterial},Ln={graph:ue,forcelayout:Be,forcelayout3d:vt},On=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},Cn=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},Sn=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},Dn=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)};return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=function(r){Cn(a,t);function a(){var t;On(this,a);for(var r=arguments.length,o=Array(r),i=0;i<r;i++)o[i]=arguments[i];var f=Sn(this,(t=a.__proto__||Object.getPrototypeOf(a)).call.apply(t,[this].concat(o)));return f.__kapsuleInstance=e().apply(void 0,[].concat(Dn(n?[f]:[]),o)),f}return a}();
// attach kapsule props/methods to class prototype
return Object.keys(e()).forEach(function(e){return r.prototype[e]=function(){var t,n=(t=this.__kapsuleInstance)[e].apply(t,arguments);return n===this.__kapsuleInstance?this// chain based on this class, not the kapsule obj
:n}}),r}(At({props:{jsonUrl:{},graphData:{default:{nodes:[],links:[]},onChange:function(e,t){t.onFrame=null}// Pause simulation
},numDimensions:{default:3,onChange:function(e,t){e<3&&n(t.graphData.nodes,"z"),e<2&&n(t.graphData.nodes,"y");function n(e,t){e.forEach(function(e){delete e[t],// position
delete e["v"+t]})}}},nodeRelSize:{default:4},// volume per val unit
nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},// how many slice segments in the sphere's circumference
nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeThreeObject:{},linkSource:{default:"source"},linkTarget:{default:"target"},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkVal:{default:"val"},// Rounded to nearest integer and multiplied by linkDefaultWidth
linkDefaultWidth:{default:1},linkResolution:{default:6},// how many radial segments in the cylinder geometry
forceEngine:{default:"d3"},// d3 or ngraph
d3AlphaDecay:{default:.0228},d3VelocityDecay:{default:.4},warmupTicks:{default:0},// how many times to tick the force engine at init before starting to render
cooldownTicks:{default:1/0},cooldownTime:{default:15e3},// ms
onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1}},aliases:{autoColorBy:"nodeAutoColorBy"},methods:{
// Expose d3 forces for external manipulation
d3Force:function(e,t,n){return void 0===n?e.d3ForceLayout.force(t):(e.d3ForceLayout.force(t,n),this)},tickFrame:function(e){return e.onFrame&&e.onFrame(),this}},stateInit:function(){return{d3ForceLayout:// Sequential
function(e,t){t=t||2;var n,r=Math.min(ne,Math.max(1,Math.round(t))),a=1,o=.001,i=1-Math.pow(o,1/300),f=0,s=.6,c=z(),u=Z(h),d=O("tick","end");null==e&&(e=[]);function h(){l(),d.call("tick",n),a<o&&(u.stop(),d.call("end",n))}function l(){var t,n,o=e.length;for(a+=(f-a)*i,c.each(function(e){e(a)}),t=0;t<o;++t)null==(n=e[t]).fx?n.x+=n.vx*=s:(n.x=n.fx,n.vx=0),r>1&&(null==n.fy?n.y+=n.vy*=s:(n.y=n.fy,n.vy=0)),r>2&&(null==n.fz?n.z+=n.vz*=s:(n.z=n.fz,n.vz=0))}function p(){for(var t,n=0,a=e.length;n<a;++n){if((t=e[n]).index=n,isNaN(t.x)||r>1&&isNaN(t.y)||r>2&&isNaN(t.z)){var o=ie*(r>2?Math.cbrt(n):r>1?Math.sqrt(n):n),i=n*fe,f=n*se;t.x=o*(r>1?Math.cos(i):1),r>1&&(t.y=o*Math.sin(i)),r>2&&(t.z=o*Math.sin(f))}(isNaN(t.vx)||r>1&&isNaN(t.vy)||r>2&&isNaN(t.vz))&&(t.vx=0,r>1&&(t.vy=0),r>2&&(t.vz=0))}}function b(t){return t.initialize&&t.initialize(e,r),t}return p(),n={tick:l,restart:function(){return u.restart(h),n},stop:function(){return u.stop(),n},numDimensions:function(e){return arguments.length?(r=Math.min(ne,Math.max(1,Math.round(e))),c.each(b),n):r},nodes:function(t){return arguments.length?(e=t,p(),c.each(b),n):e},alpha:function(e){return arguments.length?(a=+e,n):a},alphaMin:function(e){return arguments.length?(o=+e,n):o},alphaDecay:function(e){return arguments.length?(i=+e,n):+i},alphaTarget:function(e){return arguments.length?(f=+e,n):f},velocityDecay:function(e){return arguments.length?(s=1-e,n):1-s},force:function(e,t){return arguments.length>1?(null==t?c.remove(e):c.set(e,b(t)),n):c.get(e)},find:function(){var t,n,a,o,i,f,s=Array.prototype.slice.call(arguments),c=s.shift()||0,u=(r>1?s.shift():null)||0,d=(r>2?s.shift():null)||0,h=s.shift()||1/0,l=0,p=e.length;for(h*=h,l=0;l<p;++l)(o=(t=c-(i=e[l]).x)*t+(n=u-(i.y||0))*n+(a=d-(i.z||0))*a)<h&&(f=i,h=o);return f},on:function(e,t){return arguments.length>1?(d.on(e,t),n):d.on(e)}}}().force("link",function(e){var r,a,o,i,f,s,c=P,u=function(e){return 1/Math.min(f[e.source.index],f[e.target.index])},d=t(30),h=1;null==e&&(e=[]);function l(t){for(var o=0,f=e.length;o<h;++o)for(var c,u,d,l,p,b=0,y=0,g=0,v=0;b<f;++b)u=(c=e[b]).source,y=(d=c.target).x+d.vx-u.x-u.vx||n(),i>1&&(g=d.y+d.vy-u.y-u.vy||n()),i>2&&(v=d.z+d.vz-u.z-u.vz||n()),y*=l=((l=Math.sqrt(y*y+g*g+v*v))-a[b])/l*t*r[b],g*=l,v*=l,d.vx-=y*(p=s[b]),i>1&&(d.vy-=g*p),i>2&&(d.vz-=v*p),u.vx+=y*(p=1-p),i>1&&(u.vy+=g*p),i>2&&(u.vz+=v*p)}function p(){if(o){var t,n,i=o.length,u=e.length,d=z(o,c);for(t=0,f=new Array(i);t<u;++t)(n=e[t]).index=t,"object"!=typeof n.source&&(n.source=I(d,n.source)),"object"!=typeof n.target&&(n.target=I(d,n.target)),f[n.source.index]=(f[n.source.index]||0)+1,f[n.target.index]=(f[n.target.index]||0)+1;for(t=0,s=new Array(u);t<u;++t)n=e[t],s[t]=f[n.source.index]/(f[n.source.index]+f[n.target.index]);r=new Array(u),b(),a=new Array(u),y()}}function b(){if(o)for(var t=0,n=e.length;t<n;++t)r[t]=+u(e[t],t,e)}function y(){if(o)for(var t=0,n=e.length;t<n;++t)a[t]=+d(e[t],t,e)}return l.initialize=function(e,t){o=e,i=t,p()},l.links=function(t){return arguments.length?(e=t,p(),l):e},l.id=function(e){return arguments.length?(c=e,l):c},l.iterations=function(e){return arguments.length?(h=+e,l):h},l.strength=function(e){return arguments.length?(u="function"==typeof e?e:t(+e),b(),l):u},l.distance=function(e){return arguments.length?(d="function"==typeof e?e:t(+e),y(),l):d},l}()).force("charge",function(){var e,r,a,o,f,s=t(-30),c=1,u=1/0,d=.81;function h(t){var n,f=e.length,s=(1===r?i(e,re):2===r?p(e,re,ae):3===r?k(e,re,ae,oe):null).visitAfter(b);for(o=t,n=0;n<f;++n)a=e[n],s.visit(y)}function l(){if(e){var t,n,r=e.length;for(f=new Array(r),t=0;t<r;++t)n=e[t],f[n.index]=+s(n,t,e)}}function b(e){var t,n,a,o,i,s,c=0,u=0;
// For internal nodes, accumulate forces from children.
if(e.length){for(a=o=i=s=0;s<4;++s)(t=e[s])&&(n=Math.abs(t.value))&&(c+=t.value,u+=n,a+=n*(t.x||0),o+=n*(t.y||0),i+=n*(t.z||0));e.x=a/u,r>1&&(e.y=o/u),r>2&&(e.z=i/u)}
// For leaf nodes, accumulate forces from coincident nodes.
else{(t=e).x=t.data.x,r>1&&(t.y=t.data.y),r>2&&(t.z=t.data.z);do{c+=f[t.data.index]}while(t=t.next)}e.value=c}function y(e,t,i,s,h){if(!e.value)return!0;var l=[i,s,h][r-1],p=e.x-a.x,b=r>1?e.y-a.y:0,y=r>2?e.z-a.z:0,g=l-t,v=p*p+b*b+y*y;
// Apply the Barnes-Hut approximation if possible.
// Limit forces for very close nodes; randomize direction if coincident.
if(g*g/d<v)return v<u&&(0===p&&(p=n(),v+=p*p),r>1&&0===b&&(b=n(),v+=b*b),r>2&&0===y&&(y=n(),v+=y*y),v<c&&(v=Math.sqrt(c*v)),a.vx+=p*e.value*o/v,r>1&&(a.vy+=b*e.value*o/v),r>2&&(a.vz+=y*e.value*o/v)),!0;
// Limit forces for very close nodes; randomize direction if coincident.
if(!(e.length||v>=u)){(e.data!==a||e.next)&&(0===p&&(p=n(),v+=p*p),r>1&&0===b&&(b=n(),v+=b*b),r>2&&0===y&&(y=n(),v+=y*y),v<c&&(v=Math.sqrt(c*v)));do{e.data!==a&&(g=f[e.data.index]*o/v,a.vx+=p*g,r>1&&(a.vy+=b*g),r>2&&(a.vz+=y*g))}while(e=e.next)}}return h.initialize=function(t,n){e=t,r=n,l()},h.strength=function(e){return arguments.length?(s="function"==typeof e?e:t(+e),l(),h):s},h.distanceMin=function(e){return arguments.length?(c=e*e,h):Math.sqrt(c)},h.distanceMax=function(e){return arguments.length?(u=e*e,h):Math.sqrt(u)},h.theta=function(e){return arguments.length?(d=e*e,h):Math.sqrt(d)},h}()).force("center",function(e,t,n){var r;null==e&&(e=0),null==t&&(t=0),null==n&&(n=0);function a(){var a,o,i=r.length,f=0,s=0,c=0;for(a=0;a<i;++a)f+=(o=r[a]).x||0,s+=o.y||0,c+=o.z||0;for(f=f/i-e,s=s/i-t,c=c/i-n,a=0;a<i;++a)o=r[a],f&&(o.x-=f),s&&(o.y-=s),c&&(o.z-=c)}return a.initialize=function(e){r=e},a.x=function(t){return arguments.length?(e=+t,a):e},a.y=function(e){return arguments.length?(t=+e,a):t},a.z=function(e){return arguments.length?(n=+e,a):n},a}()).stop()}},init:function(e,t){
// Main three object to manipulate
t.graphScene=e},update:function(e){
// Add WebGL objects
for(e.onFrame=null,// Pause simulation
e.onLoading(),(e.graphData.nodes.length||e.graphData.links.length)&&console.info("force-graph loading",e.graphData.nodes.length+" nodes",e.graphData.links.length+" links"),e.fetchingJson||!e.jsonUrl||e.graphData.nodes.length||e.graphData.links.length||(
// (Re-)load data
e.fetchingJson=!0,qt.get(e.jsonUrl).then(function(t,n){e.fetchingJson=!1,e.graphData=n,e._rerender()})),null!==e.nodeAutoColorBy&&
// Auto add color to uncolored nodes
Pn(e.graphData.nodes,Et(e.nodeAutoColorBy),e.nodeColor),null!==e.linkAutoColorBy&&
// Auto add color to uncolored links
Pn(e.graphData.links,Et(e.linkAutoColorBy),e.linkColor)
// parse links
,e.graphData.links.forEach(function(t){t.source=t[e.linkSource],t.target=t[e.linkTarget]});e.graphScene.children.length;)e.graphScene.remove(e.graphScene.children[0]);// Clear the place
var t=Et(e.nodeThreeObject),n=Et(e.nodeVal),r=Et(e.nodeColor),a={},o={};// indexed by color
e.graphData.nodes.forEach(function(i){var f=t(i),s=void 0;if(f)s=f.clone();else{
// Default object (sphere mesh)
var c=n(i)||1;a.hasOwnProperty(c)||(a[c]=new In.SphereGeometry(Math.cbrt(c)*e.nodeRelSize,e.nodeResolution,e.nodeResolution));var u=r(i);o.hasOwnProperty(u)||(o[u]=new In.MeshLambertMaterial({color:Tn(u||"#ffffaa"),transparent:!0,opacity:e.nodeOpacity})),s=new In.Mesh(a[c],o[u])}s.__graphObjType="node",// Add object type
s.__data=i,// Attach node data
e.graphScene.add(i.__threeObj=s)});var i=Et(e.linkColor),f=Et(e.linkVal),s={},c={};// indexed by color
e.graphData.links.forEach(function(t){var n=i(t),r=f(t)||1,a=r*e.linkDefaultWidth/2;s.hasOwnProperty(r)||(s[r]=new THREE.CylinderGeometry(a,a,1,e.linkResolution),s[r].applyMatrix((new THREE.Matrix4).makeTranslation(0,.5,0)),s[r].applyMatrix((new THREE.Matrix4).makeRotationX(Math.PI/2))),c.hasOwnProperty(n)||(c[n]=new THREE.MeshLambertMaterial({color:Tn(n||"#f0f0f0"),transparent:!0,opacity:e.linkOpacity}));var o=new THREE.Mesh(s[r],c[n]);o.renderOrder=10,// Prevent visual glitches of dark lines on top of nodes by rendering them last
o.__graphObjType="link",// Add object type
o.__data=t,// Attach link data
e.graphScene.add(t.__lineObj=o)});
// Feed data to force-directed layout
var u="ngraph"!==e.forceEngine,d=void 0;if(u)
// D3-force
(d=e.d3ForceLayout).stop().alpha(1)// re-heat the simulation
.alphaDecay(e.d3AlphaDecay).velocityDecay(e.d3VelocityDecay).numDimensions(e.numDimensions).nodes(e.graphData.nodes).force("link").id(function(t){return t[e.nodeId]}).links(e.graphData.links);else{
// ngraph
var h=Ln.graph();e.graphData.nodes.forEach(function(t){h.addNode(t[e.nodeId])}),e.graphData.links.forEach(function(e){h.addLink(e.source,e.target)}),(d=Ln["forcelayout"+(2===e.numDimensions?"":"3d")](h)).graph=h}for(var l=0;l<e.warmupTicks;l++)d[u?"tick":"step"]();// Initial ticks before starting to render
var p=0,b=new Date;e.onFrame=
//
function(){++p>e.cooldownTicks||new Date-b>e.cooldownTime?e.onFrame=null:d[u?"tick":"step"]()
// Update nodes position;
e.graphData.nodes.forEach(function(t){var n=t.__threeObj;if(n){var r=u?t:d.getNodePosition(t[e.nodeId]);n.position.x=r.x,n.position.y=r.y||0,n.position.z=r.z||0}}),
// Update links position
e.graphData.links.forEach(function(e){var t=e.__lineObj;if(t){var n=u?e:d.getLinkPosition(d.graph.getLink(e.source,e.target).id),r=n[u?"source":"from"],a=n[u?"target":"to"],o=new THREE.Vector3(r.x,r.y||0,r.z||0),i=new THREE.Vector3(a.x,a.y||0,a.z||0),f=o.distanceTo(i);t.position.x=o.x,t.position.y=o.y,t.position.z=o.z,t.lookAt(i),t.scale.z=f}})},e.onFinishLoading()}}),e.Group,!0)});
//# sourceMappingURL=three-forcegraph.js.map